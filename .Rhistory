complete(metabolite, id, fill = list(avg_nmol = 0)) %>%
group_by(metabolite) %>%
mutate(norm_conc = rank(avg_nmol)) %>%
select(metabolite, norm_conc, id) %>%
pivot_wider(names_from = "metabolite", values_from = "norm_conc") %>%
mutate(id=factor(id)) %>%
arrange(id) %>%
na.omit() %>%
column_to_rownames("id")
grad_plotheatmap <- grad_heatmap_data %>%
data.matrix() %>%
heatmaply(fontsize_row = 10, fontsize_col = 7)
plotheatmap
grad_plotheatmap
grad_plotheatmap <- grad_heatmap_data %>%
data.matrix() %>%
heatmaply(fontsize_row = 7, fontsize_col = 7)
grad_plotheatmap
grad_nmds_heat <- grad_pcr %>%
group_by(metabolite, Sample_ID, Time_UTC) %>%
summarise(avg_nmol = mean(nmol)) %>%
ungroup() %>%
mutate(id = paste(Time_UTC, Sample_ID))
grad_heatmap_data <- grad_nmds_heat %>%
complete(metabolite, id, fill = list(avg_nmol = 0)) %>%
group_by(metabolite) %>%
mutate(norm_conc = rank(avg_nmol)) %>%
select(metabolite, norm_conc, id) %>%
pivot_wider(names_from = "metabolite", values_from = "norm_conc") %>%
mutate(id=factor(id)) %>%
arrange(id) %>%
na.omit() %>%
column_to_rownames("id")
grad_plotheatmap <- grad_heatmap_data %>%
data.matrix() %>%
heatmaply(fontsize_row = 7, fontsize_col = 7)
grad_plotheatmap
grad_plotheatmap <- grad_heatmap_data %>%
data.matrix() %>%
heatmaply(fontsize_row = 7, fontsize_col = 5)
grad_plotheatmap
grad_plotheatmap <- grad_heatmap_data %>%
data.matrix() %>%
heatmaply(fontsize_row = 7, fontsize_col = 3)
grad_plotheatmap
quant_nmds_heat_good <- data_vis_qual %>%
group_by(metabolite, treatment, date) %>%
summarise(avg_nmol = mean(nM)) %>%
ungroup() %>%
mutate(id = paste(date, treatment)) %>%
filter(!str_detect(treatment, "Tote"))
heatmap_data_good <- quant_nmds_heat_good %>%
# group_by(metabolite) %>%
# filter(str_detect(treatment, "T0|27July")) %>%
# filter(avg_nmol >= 0.01) %>%
complete(metabolite, id, fill = list(avg_nmol = 0)) %>%
group_by(metabolite) %>%
# mutate(norm_conc = rank(avg_nmol)) %>%
mutate(norm_conc = (avg_nmol - min(avg_nmol)) / (max(avg_nmol) - min(avg_nmol))) %>%
filter(norm_conc != "NaN") %>%
select(metabolite, norm_conc, id) %>%
pivot_wider(names_from = "metabolite", values_from = "norm_conc") %>%
# mutate(id=factor(id, levels=c(heat_level_order_treat))) %>%
arrange(id) %>%
na.omit() %>%
column_to_rownames("id")
heatmap_data_good %>%
data.matrix() %>%
heatmaply(fontsize_row = 10, fontsize_col = 7)
heatmap_data_good %>%
data.matrix() %>%
heatmaply(fontsize_row = 10, fontsize_col = 7)
# make clustered heatmap from scratch using pheatmap
```
heatmap_data_good
heatmap_data_good
heatmap_data_good %>%
data.matrix() %>%
heatmaply(fontsize_row = 10, fontsize_col = 7)
heatmap_data_good %>%
data.matrix() %>%
heatmaply(fontsize_row = 7, fontsize_col = 5)
grad_nmds_heat <- grad_pcr %>%
group_by(metabolite, Sample_ID, Time_UTC) %>%
summarise(avg_nmol = mean(nmol)) %>%
ungroup() %>%
mutate(id = paste(Time_UTC, Sample_ID))
grad_heatmap_data <- grad_nmds_heat %>%
complete(metabolite, id, fill = list(avg_nmol = 0)) %>%
group_by(metabolite) %>%
# mutate(norm_conc = rank(avg_nmol)) %>%
mutate(norm_conc = (avg_nmol - min(avg_nmol)) / (max(avg_nmol) - min(avg_nmol))) %>%
select(metabolite, norm_conc, id) %>%
pivot_wider(names_from = "metabolite", values_from = "norm_conc") %>%
mutate(id=factor(id)) %>%
arrange(id) %>%
na.omit() %>%
column_to_rownames("id")
grad_plotheatmap <- grad_heatmap_data %>%
data.matrix() %>%
heatmaply(fontsize_row = 7, fontsize_col = 3)
grad_plotheatmap
grad_plotheatmap <- grad_heatmap_data %>%
data.matrix() %>%
heatmaply(fontsize_row = 5, fontsize_col = 3)
grad_plotheatmap <- grad_heatmap_data %>%
data.matrix() %>%
heatmaply(fontsize_row = 5, fontsize_col = 3)
grad_plotheatmap
summary(pcr_model)
peri_pcr_model <- pcr(pc~nmol+metabolite, data = peridice_pcr, scale = TRUE, validation = "LOO")
peri_pcr_model <- pcr(pc~nmol+metabolite, data = peridice_pcr, scale = TRUE, validation = "CV")
test_peri <- predict(peri_pcr_model, newdata = peridice_pcr)
summary(test_peri)
summary(peri_pcr_model)
actual_values <- peridice_pcr$pc
results <- data.frame(actual = actual_values, predicted = test_peri) %>%
rename(predicted1 = predicted.n_nmol.1.comps) %>%
rename(predicted2 = predicted.n_nmol.2.comps)
results <- data.frame(actual = actual_values, predicted = test_peri) %>%
rename(predicted1 = predicted.pc.1.comps) %>%
rename(predicted2 = predicted.pc.2.comps)
results <- data.frame(actual = actual_values, predicted = test_peri)
View(results)
results <- data.frame(actual = actual_values, predicted = test_peri) %>%
rename(predicted1 = predicted.pc.1.comps) %>%
rename(predicted2 = predicted.pc.2.comps)
results <- data.frame(actual = actual_values, predicted = test_peri)
ggplot(results, aes(x = actual, y = predicted.pc.1.comps)) +
geom_point() +
geom_abline(intercept = 0, slope = 1, color = "blue", linetype = "dashed") +
labs(title = "PERI-DICE train and test",
x = "Measured N (uM)",
y = "Predicted N (uM)") +
xlim(0,5) +
ylim(0,5) +
theme_bw()
summary(pcr_model)
ggplot(results, aes(x = actual, y = predicted.pc.1.comps)) +
geom_point() +
geom_abline(intercept = 0, slope = 1, color = "blue", linetype = "dashed") +
labs(title = "PERI-DICE train and test",
x = "Measured N (uM)",
y = "Predicted N (uM)") +
xlim(0,5) +
ylim(0,5) +
theme_bw()
View(results)
head(results)
ggplot(results, aes(x = actual, y = predicted.pc.1.comps)) +
geom_point() +
geom_abline(intercept = 0, slope = 1, color = "blue", linetype = "dashed") +
labs(title = "PERI-DICE train and test",
x = "Measured N (uM)",
y = "Predicted N (uM)") +
xlim(0,5) +
ylim(0,5) +
theme_bw()
ggplot(results, aes(x = actual, y = predicted.pc.1.comps)) +
geom_point() +
geom_abline(intercept = 0, slope = 1, color = "blue", linetype = "dashed") +
labs(title = "PERI-DICE train and test",
x = "Measured N (uM)",
y = "Predicted N (uM)") +
# xlim(0,5) +
# ylim(0,5) +
theme_bw()
View(peridice_pcr)
peri_pcr_model <- pcr(pc~nmol+metabolite+filename, data = peridice_pcr, scale = TRUE, validation = "CV")
peridice_pcr <- peridice %>%
select(nmol, filename, metabolite, n_nmol = added_N_uM, pc, pn) %>%
mutate(nm_per_pc = nmol/pc) %>%
mutate(n_nmol = replace_na(n_nmol, 0)) %>%
# filter(str_detect(filename, "T0|27July")) %>%
mutate(n_per_pc = n_nmol/pc) %>%
# select(nmol, n_nmol) %>%
group_by(metabolite, filename) %>%
filter(str_detect(metabolite, "Guanine|Arsenobetaine")) %>%
mutate(timepoint = str_extract(replicate, "27June|30June|14July|21July|27July")) %>%
mutate(timepoint = str_replace_all(timepoint, "July", "-7-22")) %>%
mutate(timepoint = str_replace_all(timepoint, "June", "-6-22")) %>%
mutate(date = as.Date(timepoint, format = "%d-%m-%y"))
peridice_pcr <- peridice %>%
select(nmol, filename, metabolite, n_nmol = added_N_uM, pc, pn) %>%
mutate(nm_per_pc = nmol/pc) %>%
mutate(n_nmol = replace_na(n_nmol, 0)) %>%
# filter(str_detect(filename, "T0|27July")) %>%
mutate(n_per_pc = n_nmol/pc) %>%
# select(nmol, n_nmol) %>%
group_by(metabolite, filename) %>%
filter(str_detect(metabolite, "Guanine|Arsenobetaine")) %>%
mutate(timepoint = str_extract(filename, "27June|30June|14July|21July|27July")) %>%
mutate(timepoint = str_replace_all(timepoint, "July", "-7-22")) %>%
mutate(timepoint = str_replace_all(timepoint, "June", "-6-22")) %>%
mutate(date = as.Date(timepoint, format = "%d-%m-%y"))
peridice_pcr <- peridice %>%
select(nmol, filename, metabolite, n_nmol = added_N_uM, pc, pn) %>%
mutate(nm_per_pc = nmol/pc) %>%
mutate(n_nmol = replace_na(n_nmol, 0)) %>%
# filter(str_detect(filename, "T0|27July")) %>%
mutate(n_per_pc = n_nmol/pc) %>%
# select(nmol, n_nmol) %>%
group_by(metabolite, filename) %>%
# filter(str_detect(metabolite, "Guanine|Arsenobetaine")) %>%
mutate(timepoint = str_extract(filename, "27June|30June|14July|21July|27July")) %>%
mutate(timepoint = str_replace_all(timepoint, "July", "-7-22")) %>%
mutate(timepoint = str_replace_all(timepoint, "June", "-6-22")) %>%
mutate(date = as.Date(timepoint, format = "%d-%m-%y"))
peri_pcr_model <- pcr(pc~nmol+metabolite, data = peridice_pcr, scale = TRUE, validation = "CV")
test_peri <- predict(peri_pcr_model, newdata = peridice_pcr)
summary(test_peri)
summary(peri_pcr_model)
actual_values <- peridice_pcr$pc
results <- data.frame(actual = actual_values, predicted = test_peri) %>%
rename(predicted1 = predicted.pc.1.comps) %>%
rename(predicted2 = predicted.pc.2.comps)
summary(pcr_model)
ggplot(results, aes(x = actual, y = predicted.pc.1.comps)) +
geom_point() +
geom_abline(intercept = 0, slope = 1, color = "blue", linetype = "dashed") +
labs(title = "PERI-DICE train and test",
x = "Measured N (uM)",
y = "Predicted N (uM)") +
# xlim(0,5) +
# ylim(0,5) +
theme_bw()
peri_pcr_model <- pcr(pc~nmol+metabolite+date, data = peridice_pcr, scale = TRUE, validation = "CV")
test_peri <- predict(peri_pcr_model, newdata = peridice_pcr)
summary(test_peri)
summary(peri_pcr_model)
actual_values <- peridice_pcr$pc
results <- data.frame(actual = actual_values, predicted = test_peri) %>%
rename(predicted1 = predicted.pc.1.comps) %>%
rename(predicted2 = predicted.pc.2.comps)
summary(pcr_model)
ggplot(results, aes(x = actual, y = predicted.pc.1.comps)) +
geom_point() +
geom_abline(intercept = 0, slope = 1, color = "blue", linetype = "dashed") +
labs(title = "PERI-DICE train and test",
x = "Measured N (uM)",
y = "Predicted N (uM)") +
# xlim(0,5) +
# ylim(0,5) +
theme_bw()
ggplot(results, aes(x = actual, y = predicted.pc.1.comps)) +
geom_point() +
geom_abline(intercept = 0, slope = 1, color = "blue", linetype = "dashed") +
# xlim(0,5) +
# ylim(0,5) +
theme_bw()
peri_pcr_model <- pcr(pc~nmol+metabolite, data = peridice_pcr, scale = TRUE, validation = "CV")
peri_pcr_model <- pcr(pc~nmol+metabolite, data = peridice_pcr, scale = TRUE, validation = "CV")
test_peri <- predict(peri_pcr_model, newdata = peridice_pcr)
summary(test_peri)
summary(test_peri)
summary(peri_pcr_model)
actual_values <- peridice_pcr$pc
results <- data.frame(actual = actual_values, predicted = test_peri) %>%
rename(predicted1 = predicted.pc.1.comps) %>%
rename(predicted2 = predicted.pc.2.comps)
ggplot(results, aes(x = actual, y = predicted.pc.1.comps)) +
geom_point() +
geom_abline(intercept = 0, slope = 1, color = "blue", linetype = "dashed") +
# xlim(0,5) +
# ylim(0,5) +
theme_bw()
peri_pcr_model <- pcr(pc~nmol_per_pc+metabolite, data = peridice_pcr, scale = TRUE, validation = "CV")
test_peri <- predict(peri_pcr_model, newdata = peridice_pcr)
peri_pcr_model <- pcr(pc~nmol_per_pc+metabolite, data = peridice_pcr, scale = TRUE, validation = "CV")
peri_pcr_model <- pcr(pc~nm_per_pc+metabolite, data = peridice_pcr, scale = TRUE, validation = "CV")
test_peri <- predict(peri_pcr_model, newdata = peridice_pcr)
summary(test_peri)
summary(peri_pcr_model)
actual_values <- peridice_pcr$pc
summary(pcr_model)
ggplot(results, aes(x = actual, y = predicted.pc.1.comps)) +
geom_point() +
geom_abline(intercept = 0, slope = 1, color = "blue", linetype = "dashed") +
# xlim(0,5) +
# ylim(0,5) +
theme_bw()
peri_pcr_model <- pcr(pc~nmol+metabolite+filename, data = peridice_pcr, scale = TRUE, validation = "CV")
test_peri <- predict(peri_pcr_model, newdata = peridice_pcr)
peri_pcr_model <- pcr(pc~nmol+filename, data = peridice_pcr, scale = TRUE, validation = "CV")
test_peri <- predict(peri_pcr_model, newdata = peridice_pcr)
View(peridice_pcr)
%>%
grad_pcr <- gradients %>%
select(-c("Compound_name_in_figures")) %>%
pivot_longer(!Complete_compound_name, names_to = "Sample_ID", values_to = "nmol") %>%
left_join(grad_meta) %>%
rename(metabolite = Complete_compound_name, n_nmol = NO3_NO2, pc = PC_nM, pn = PN_nM) %>%
mutate(nm_per_pc = nmol/pc) %>%
mutate(n_per_pc = n_nmol/pc)
peridice <- read_csv("PERIDICE_metabolite_data.csv")
gradients <- read_csv("csvs/G1_Metab_Data.csv")
grad_meta <- read_csv("csvs/G1_MetaData.csv")
grad_pcr <- gradients %>%
select(-c("Compound_name_in_figures")) %>%
pivot_longer(!Complete_compound_name, names_to = "Sample_ID", values_to = "nmol") %>%
left_join(grad_meta) %>%
rename(metabolite = Complete_compound_name, n_nmol = NO3_NO2, pc = PC_nM, pn = PN_nM) %>%
mutate(nm_per_pc = nmol/pc) %>%
mutate(n_per_pc = n_nmol/pc)
View(gradients)
library(tidyverse)
library(ggplot2)
library(readr)
library(pls)
library(stats)
peridice <- read_csv("PERIDICE_metabolite_data.csv")
gradients <- read_csv("csvs/G1_Metab_Data.csv")
grad_meta <- read_csv("csvs/G1_MetaData.csv")
grad_pcr <- gradients %>%
select(-c("Compound_name_in_figures")) %>%
pivot_longer(!Complete_compound_name, names_to = "Sample_ID", values_to = "nmol") %>%
left_join(grad_meta) %>%
rename(metabolite = Complete_compound_name, n_nmol = NO3_NO2, pc = PC_nM, pn = PN_nM) %>%
mutate(nm_per_pc = nmol/pc) %>%
mutate(n_per_pc = n_nmol/pc)
grad_pcr <- gradients %>%
select(-c("Compound_name_in_figures")) %>%
pivot_longer(!Complete_compound_name, names_to = "Sample_ID", values_to = "nmol")
grad_pcr <- gradients %>%
select(-c("Compound_name_in_figures")) %>%
pivot_longer(!Complete_compound_name, names_to = "Sample_ID", values_to = "nmol") %>%
left_join(grad_meta)
grad_pcr <- gradients %>%
select(-c("Compound_name_in_figures")) %>%
pivot_longer(!Complete_compound_name, names_to = "Sample_ID", values_to = "nmol") %>%
left_join(grad_meta) %>%
rename(metabolite = Complete_compound_name, n_nmol = NO3_NO2, pc = PC_nM, pn = PN_nM)
grad_pcr <- gradients %>%
select(-c("Compound_name_in_figures")) %>%
pivot_longer(!Complete_compound_name, names_to = "Sample_ID", values_to = "nmol") %>%
left_join(grad_meta)
View(grad_pcr)
View(grad_pcr)
peridice_pcr <- peridice %>%
select(nmol, filename, metabolite, n_nmol = added_N_uM, pc, pn) %>%
mutate(nm_per_pc = nmol/pc) %>%
mutate(n_nmol = replace_na(n_nmol, 0)) %>%
# filter(str_detect(filename, "T0|27July")) %>%
mutate(n_per_pc = n_nmol/pc) %>%
# select(nmol, n_nmol) %>%
group_by(metabolite, filename) %>%
# filter(str_detect(metabolite, "Guanine|Arsenobetaine")) %>%
mutate(timepoint = str_extract(filename, "27June|30June|14July|21July|27July")) %>%
mutate(timepoint = str_replace_all(timepoint, "July", "-7-22")) %>%
mutate(timepoint = str_replace_all(timepoint, "June", "-6-22")) %>%
mutate(date = as.Date(timepoint, format = "%d-%m-%y"))
peri_pcr_model <- pcr(n_nmol~nm_per_pc+metabolite, data = peridice_pcr, scale = TRUE, validation = "LOO")
peri_pcr_model <- pcr(pc~nmol+metabolite, data = peridice_pcr, scale = TRUE, validation = "CV")
test_peri <- predict(peri_pcr_model, newdata = peridice_pcr)
summary(test_peri)
summary(peri_pcr_model)
actual_values <- peridice_pcr$n_nmol
results <- data.frame(actual = actual_values, predicted = test_peri) %>%
rename(predicted1 = predicted.n_nmol.1.comps) %>%
rename(predicted2 = predicted.n_nmol.2.comps)
ggplot(results, aes(x = actual, y = predicted.pc.1.comps)) +
geom_point() +
geom_abline(intercept = 0, slope = 1, color = "blue", linetype = "dashed") +
labs(title = "PERI-DICE train and test",
x = "Measured N (uM)",
y = "Predicted N (uM)") +
xlim(0,5) +
ylim(0,5) +
theme_bw()
ggplot(results, aes(x = actual, y = predicted.pc.1.comps)) +
geom_point() +
geom_abline(intercept = 0, slope = 1, color = "blue", linetype = "dashed") +
labs(title = "PERI-DICE train and test",
x = "Measured N (uM)",
y = "Predicted N (uM)") +
# xlim(0,5) +
# ylim(0,5) +
theme_bw()
View(peridice_pcr)
peri_pcr_model <- pcr(pc~nmol+metabolite+date, data = peridice_pcr, scale = TRUE, validation = "CV")
test_peri <- predict(peri_pcr_model, newdata = peridice_pcr)
summary(test_peri)
summary(peri_pcr_model)
actual_values <- peridice_pcr$n_nmol
ggplot(results, aes(x = actual, y = predicted.pc.1.comps)) +
geom_point() +
geom_abline(intercept = 0, slope = 1, color = "blue", linetype = "dashed") +
labs(title = "PERI-DICE train and test",
x = "Measured N (uM)",
y = "Predicted N (uM)") +
# xlim(0,5) +
# ylim(0,5) +
theme_bw()
View(peridice_pcr)
peridice_pcr <- peridice %>%
select(nmol, filename, metabolite, n_nmol = added_N_uM, pc, pn) %>%
mutate(nm_per_pc = nmol/pc) %>%
mutate(n_nmol = replace_na(n_nmol, 0)) %>%
# filter(str_detect(filename, "T0|27July")) %>%
mutate(n_per_pc = n_nmol/pc) %>%
# select(nmol, n_nmol) %>%
group_by(metabolite, filename) %>%
# filter(str_detect(metabolite, "Guanine|Arsenobetaine")) %>%
mutate(timepoint = str_extract(filename, "27June|30June|14July|21July|27July")) %>%
mutate(timepoint = str_replace_all(timepoint, "July", "-7-22")) %>%
mutate(timepoint = str_replace_all(timepoint, "June", "-6-22")) %>%
mutate(date = as.Date(timepoint, format = "%d-%m-%y")) %>%
mutate(treatment = str_extract(filename, "RH|RL|LH|LL|ZH|ZL|ZF|C"))
peri_pcr_model <- pcr(pc~nmol+metabolite+date+treatment, data = peridice_pcr, scale = TRUE, validation = "CV")
test_peri <- predict(peri_pcr_model, newdata = peridice_pcr)
summary(test_peri)
summary(peri_pcr_model)
actual_values <- peridice_pcr$n_nmol
results <- data.frame(actual = actual_values, predicted = test_peri) %>%
rename(predicted1 = predicted.n_nmol.1.comps) %>%
rename(predicted2 = predicted.n_nmol.2.comps)
ggplot(results, aes(x = actual, y = predicted.pc.1.comps)) +
geom_point() +
geom_abline(intercept = 0, slope = 1, color = "blue", linetype = "dashed") +
labs(title = "PERI-DICE train and test",
x = "Measured N (uM)",
y = "Predicted N (uM)") +
# xlim(0,5) +
# ylim(0,5) +
theme_bw()
peridice <- read_csv("PERIDICE_metabolite_data.csv")
peridice <- read_csv("PERIDICE_metabolite_data.csv")
gradients <- read_csv("csvs/G1_Metab_Data.csv")
grad_meta <- read_csv("csvs/G1_MetaData.csv")
grad_meta <- read_csv("csvs/G1_MetaData.csv")
grad_pcr <- gradients %>%
select(-c("Compound_name_in_figures")) %>%
pivot_longer(!Complete_compound_name, names_to = "Sample_ID", values_to = "nmol") %>%
left_join(grad_meta) %>%
rename(metabolite = Complete_compound_name, n_nmol = NO3_NO2, pc = PC_nM, pn = PN_nM) %>%
mutate(nm_per_pc = nmol/pc) %>%
mutate(n_per_pc = n_nmol/pc)
View(gradients)
grad_pcr <- gradients %>%
select(-c("Compound_name_in_figures")) %>%
pivot_longer(!Complete_compound_name, names_to = "Sample_ID", values_to = "nmol")
View(grad_pcr)
grad_pcr <- gradients %>%
select(-c("Compound_name_in_figures")) %>%
pivot_longer(!Complete_compound_name, names_to = "Sample_ID", values_to = "nmol") %>%
left_join(grad_meta)
grad_pcr <- gradients %>%
select(-c("Compound_name_in_figures")) %>%
pivot_longer(!Complete_compound_name, names_to = "Sample_ID", values_to = "nmol") %>%
left_join(grad_meta) %>%
rename(metabolite = Complete_compound_name, n_nmol = NO3_NO2, pc = PC_nM, pn = PN_nM)
grad_pcr <- gradients %>%
select(-c("Compound_name_in_figures")) %>%
pivot_longer(!Complete_compound_name, names_to = "Sample_ID", values_to = "nmol") %>%
left_join(grad_meta)
View(grad_pcr)
library(tidyverse)
grad_pcr <- gradients %>%
select(-c("Compound_name_in_figures")) %>%
pivot_longer(!Complete_compound_name, names_to = "Sample_ID", values_to = "nmol") %>%
left_join(grad_meta) %>%
rename(metabolite = Complete_compound_name, n_nmol = NO3_NO2, pc = PC_nM, pn = PN_nM) %>%
mutate(nm_per_pc = nmol/pc) %>%
mutate(n_per_pc = n_nmol/pc)
library(ggplot2)
library(readr)
library(pls)
library(stats)
library(tidyverse)
library(ggplot2)
library(readr)
library(pls)
library(stats)
grad_pcr <- gradients %>%
select(-c("Compound_name_in_figures")) %>%
pivot_longer(!Complete_compound_name, names_to = "Sample_ID", values_to = "nmol") %>%
left_join(grad_meta) %>%
rename(metabolite = Complete_compound_name, n_nmol = NO3_NO2, pc = PC_nM, pn = PN_nM) %>%
mutate(nm_per_pc = nmol/pc) %>%
mutate(n_per_pc = n_nmol/pc)
grad_pcr <- gradients %>%
select(-c("Compound_name_in_figures")) %>%
pivot_longer(!Complete_compound_name, names_to = "Sample_ID", values_to = "nmol") %>%
left_join(grad_meta) %>%
tidyverse::rename(metabolite = Complete_compound_name, n_nmol = NO3_NO2, pc = PC_nM, pn = PN_nM) %>%
mutate(nm_per_pc = nmol/pc) %>%
mutate(n_per_pc = n_nmol/pc)
?rename
?dplyr
grad_pcr <- gradients %>%
select(-c("Compound_name_in_figures")) %>%
pivot_longer(!Complete_compound_name, names_to = "Sample_ID", values_to = "nmol") %>%
left_join(grad_meta) %>%
tidyverse::dplyr::rename(metabolite = Complete_compound_name, n_nmol = NO3_NO2, pc = PC_nM, pn = PN_nM) %>%
grad_pcr <- gradients %>%
select(-c("Compound_name_in_figures")) %>%
pivot_longer(!Complete_compound_name, names_to = "Sample_ID", values_to = "nmol") %>%
left_join(grad_meta) %>%
tidyverse:dplyr:rename(metabolite = Complete_compound_name, n_nmol = NO3_NO2, pc = PC_nM, pn = PN_nM) %>%
mutate(nm_per_pc = nmol/pc) %>%
mutate(n_per_pc = n_nmol/pc)
grad_pcr <- gradients %>%
select(-c("Compound_name_in_figures")) %>%
pivot_longer(!Complete_compound_name, names_to = "Sample_ID", values_to = "nmol") %>%
left_join(grad_meta) %>%
rename(metabolite = Complete_compound_name, n_nmol = NO3_NO2, pc = PC_nM, pn = PN_nM) %>%
mutate(nm_per_pc = nmol/pc) %>%
mutate(n_per_pc = n_nmol/pc)
install.packages("RFR")
install.packages("randomForest")
library(randomForest)
?randomForest

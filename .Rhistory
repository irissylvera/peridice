mdsout_nucleos$points %>%
as.data.frame() %>%
rownames_to_column("id") %>%
left_join(mds_data) %>%
mutate(date_fct = factor(date)) %>%
ggplot() +
geom_point(aes(x=MDS1, y=MDS2, color=factor(treatment, levels = level_order), shape = date_fct), size=4) +
scale_color_manual(values = c("plum2","mediumpurple3","darkslategray2", "lightseagreen","gold", "lightcoral","orange", "brown3"),
labels = c("Control","0N:1P:1Fe, high dose P","0N:1P, low dose added", "0N:1P, high dose added",
"6N:1P, low dose added", "6N:1P, high dose added",
"16N:1P, low dose added", "16N:1P, high dose added"),
name = "Treatment") +
scale_shape_discrete(name = "Date") +
theme_bw() +
ggtitle("Nucleic Acid Concentration (nM) Across Treatments")
# Chunk 22
ranked_nucleos <- quant_nmds_heat %>%
# group_by(metabolite) %>%
# filter(str_detect(treatment, "RH|RL|C|Tote")) %>%
# filter(avg_nmol >= 0.01) %>%
complete(metabolite, id, fill = list(avg_nmol = 0)) %>%
group_by(metabolite) %>%
mutate(norm_conc = rank(avg_nmol)) %>%
select(metabolite, norm_conc, id) %>%
filter(metabolite %in% nucleos$metabolite)
ranked_nucleos %>%
ggplot() +
geom_raster(aes(x = metabolite, y = factor(id, levels = heat_level_order_treat), fill = norm_conc)) +
theme(axis.text.x=element_text(angle = 90, vjust = 0.5)) +
scale_fill_gradient2(low = "steelblue", mid = "grey90",
high = "goldenrod1", midpoint = 16.5,
breaks=c(0, 16.5, 33), labels=c(
"Very little of a given compound",
"Median compound abundance",
"Compound maximum"
)) +
new_scale_fill()
# Chunk 23
sulfur <- read.csv(
"https://raw.githubusercontent.com/IngallsLabUW/Ingalls_Standards/master/Ingalls_Lab_Standards.csv",
stringsAsFactors = FALSE, header = TRUE) %>%
filter(Compound_Type == "Sulfur") %>%
select(metabolite = Compound_Name, emp_form = Empirical_Formula, metabolite_name = Compound_Name_Figure)
peridice_sulf <- data_vis %>%
filter(metabolite %in% sulfur$metabolite) %>%
filter(metabolite != "2-Hydroxy-4-(methylthio)butyric acid") %>%
filter(metabolite != "L-Cysteinesulfinic acid") %>%
filter(metabolite != "Sodium taurocholate") %>%
filter(metabolite != "Amino hydroxypropanesulfonate") %>%
filter(metabolite != "3-Aminopropanesulfonate") %>%
filter(metabolite != "3-Sulfopyruvic acid") %>%
filter(metabolite != "2-keto-4-methylthiobutyric acid") %>%
mutate(metab_type = "Sulfur-Containing")
peridice_sulf %>%
group_by(metabolite, treatment, date) %>%
# filter(!str_detect(treatment, "Tote")) %>%
filter(str_detect(treatment, "C|RH|RL|LH|LL")) %>%
ggplot(aes(x = factor(date), y = nM, color = factor(treatment, levels = level_order))) +
geom_boxplot() +
scale_color_manual(values = c("plum2", "gold", "lightcoral", "orange", "brown3"),
labels = c("Control", "6N:1P, low dose added",
"6N:1P, high dose added",
"16N:1P, low dose added", "16N:1P, high dose added"),
name = "Treatment") +
guides(fill=guide_legend(ncol=2)) +
theme_bw() +
xlab("Date") +
ylab("nM (nmol per L)") +
facet_wrap(~metabolite, scales = "free_y") +
theme(axis.text.x=element_text(angle = 90, vjust = 0.5)) +
ggtitle("Concentrations of Sulfur-Containing Compounds")
# Chunk 24
quant_nmds_sulf <- data_vis %>%
# arrange(desc(nM)) %>%
# group_by(metabolite, replicate) %>%
# slice(1) %>%
group_by(metabolite, treatment, date) %>%
summarise(avg_nmol = mean(nM)) %>%
ungroup() %>%
# complete(metabolite, date, treatment) %>%
# mutate(avg_nmol = replace_na(avg_nmol, 0)) %>%
mutate(id = paste(date, treatment)) %>%
filter(!str_detect(treatment, "Tote")) %>%
filter(metabolite %in% sulfur$metabolite)
quant_mat_sulf <- quant_nmds_sulf %>%
group_by(metabolite) %>%
mutate(norm_conc = rank(avg_nmol)) %>%
select(metabolite, norm_conc, id) %>%
pivot_wider(names_from = "metabolite", values_from = "norm_conc", values_fill = 0) %>%
column_to_rownames("id") %>%
data.matrix()
mdsout_sulf <- quant_mat_sulf %>%
metaMDS(k = 2, autotransform = FALSE)
mds_data <- metadataframe %>%
ungroup() %>%
mutate(timepoint = str_replace_all(timepoint, "July", "-7-22")) %>%
mutate(timepoint = str_replace_all(timepoint, "June", "-6-22")) %>%
mutate(date = as.Date(timepoint, format = "%d-%m-%y")) %>%
filter(str_detect(filename, "Smp")) %>%
mutate(treatment = str_remove(treatment, "\\d")) %>%
mutate(id = paste(date, treatment))
mdsout_sulf$points %>%
as.data.frame() %>%
rownames_to_column("id") %>%
left_join(mds_data) %>%
mutate(date_fct = factor(date)) %>%
ggplot() +
geom_point(aes(x=MDS1, y=MDS2, color=factor(treatment, levels = level_order), shape = date_fct), size=4) +
scale_color_manual(values = c("plum2","mediumpurple3","darkslategray2", "lightseagreen","gold", "lightcoral","orange", "brown3"),
labels = c("Control","0N:1P:1Fe, high dose P","0N:1P, low dose added", "0N:1P, high dose added",
"6N:1P, low dose added", "6N:1P, high dose added",
"16N:1P, low dose added", "16N:1P, high dose added"),
name = "Treatment") +
scale_shape_discrete(name = "Date") +
theme_bw() +
ggtitle("Variation of Metabolite Concentration (nM) Across Treatments")
# Chunk 25
ranked_sulf <- quant_nmds_heat %>%
# group_by(metabolite) %>%
# filter(str_detect(treatment, "RH|RL|C|Tote")) %>%
# filter(avg_nmol >= 0.01) %>%
complete(metabolite, id, fill = list(avg_nmol = 0)) %>%
group_by(metabolite) %>%
mutate(norm_conc = rank(avg_nmol)) %>%
select(metabolite, norm_conc, id) %>%
filter(metabolite %in% sulfur$metabolite)
ranked_sulf %>%
ggplot() +
geom_raster(aes(x = metabolite, y = factor(id, levels = heat_level_order_treat), fill = norm_conc)) +
theme(axis.text.x=element_text(angle = 90, vjust = 0.5)) +
scale_fill_gradient2(low = "steelblue", mid = "grey90",
high = "goldenrod1", midpoint = 16.5,
breaks=c(0, 16.5, 33), labels=c(
"Very little of a given compound",
"Median compound abundance",
"Compound maximum"
)) +
new_scale_fill()
# Chunk 26
# Chunk 27
peridice_metab_groups <- peridice_aas %>%
mutate(metab_type = "Amino Acid") %>%
rbind(peridice_nucleos, peridice_sulf, peridice_osmos)
peridice_metab_groups %>%
mutate(nmol_rank=(nM-min(nM))/(max(nM)-min(nM))) %>%
group_by(metab_type, treatment, date) %>%
mutate(avg_nmol = mean(nmol_rank)) %>%
distinct(avg_nmol, .keep_all = TRUE) %>%
filter(str_detect(treatment, "RH|RL|LH|LL|C")) %>%
ggplot() +
geom_col(aes(x = date, y = avg_nmol, fill = metab_type), position = "stack") +
scale_fill_manual(values = c("palegreen4", "palegreen3", "goldenrod1", "darkgoldenrod3"), name = "Metabolite Type") +
facet_grid(~metab_type~factor(treatment, levels = level_order), scales = "free_y") +
theme_bw() +
xlab("Treatment Group")
# Chunk 28
nb.cols <- 11
mycolors <- colorRampPalette(brewer.pal(8, "Paired"))(nb.cols)
metab_groups <- read.csv(
"https://raw.githubusercontent.com/IngallsLabUW/Ingalls_Standards/master/Ingalls_Lab_Standards.csv",
stringsAsFactors = FALSE, header = TRUE) %>%
select(metabolite = Compound_Name, emp_form = Empirical_Formula, metab_type = Compound_Type)
data_vis_groups <- data_vis %>%
left_join(metab_groups, by = "metabolite") %>%
# mutate(metab_type = str_replace_all(metab_type, " - degraded", "")) %>%
# mutate(metab_type = str_replace_all(metab_type, " derivative", "")) %>%
# mutate(metab_type = str_replace_all(metab_type, " synthesis", "")) %>%
mutate(metab_type = str_replace_all(metab_type, " - collagen", "")) %>%
filter(!str_detect(metab_type, "Cursed|Amino sugar|Alkaloid|Energy charge|Amine|Environmental contaminant|Organic Acid|Arsenic|Tripeptide|Peptidoglycan|Lignin|Vitamin|Antioxidant|Dipeptide|Calvin|Nucleotide|Intra|Redox|Quorum")) %>%
mutate(metab_type = str_replace_all(metab_type, " - nitrogenous", "")) %>%
mutate(metab_type = str_replace_all(metab_type, " alchohol", "")) %>%
mutate(metab_type = str_replace_all(metab_type, " phosphate", "")) %>%
mutate(metab_type = str_replace_all(metab_type, "Glycine metabolite", "Amino Acid")) %>%
mutate(metab_type = str_replace_all(metab_type, "Betaine", "Amino Acid")) %>%
mutate(metab_type = str_replace_all(metab_type, "Purine|Pyrimidine", "Nucleoside"))
data_vis_groups %>%
group_by(metabolite, treatment, date) %>%
mutate(nmol_avg = mean(nM)) %>%
distinct(metab_type, .keep_all = TRUE) %>%
# filter(str_detect(treatment, "LL|LH|RL|RH")) %>%
filter(!str_detect(treatment, "Tote")) %>%
# filter(str_detect(replicate, "14July|27July")) %>%
ggplot() +
geom_col(aes(x = factor(date), y = nmol_avg, fill = metab_type), position = "fill") +
scale_fill_manual(values = mycolors, name = "Metabolite Type") +
facet_grid(~treatment, scales = "free_y") +
theme_bw() +
ylab("Metabolite Composition (nM)") +
xlab("Date")
# Chunk 29
data_vis_cluster_plot <- data_vis_cluster %>%
left_join(data_vis_groups) %>%
na.omit() %>%
group_by(metabolite, date, treatment) %>%
filter(str_detect(cluster, "1|3|5")) %>%
mutate(nmol_avg = mean(nM)) %>%
distinct(metab_type, .keep_all = TRUE) %>%
filter(!str_detect(treatment, "Tote|Z"))
practice_df <- data_vis_groups %>%
filter(treatment == "C") %>%
cross_join(data_vis_cluster_plot)
data_vis_cluster %>%
left_join(data_vis_groups) %>%
na.omit() %>%
group_by(metabolite, date, treatment) %>%
filter(str_detect(cluster, "1")) %>%
filter(str_detect(metab_type, "Amino acid")) %>%
mutate(nmol_avg = mean(nM)) %>%
distinct(metab_type, .keep_all = TRUE) %>%
filter(!str_detect(treatment, "Tote")) %>%
ggplot() +
geom_col(aes(x = factor(date), y = nmol_avg, fill = metabolite), position = "stack") +
# scale_fill_manual(values = mycolors, name = "Metabolite Type") +
# facet_wrap(~cluster+treatment, ncol = 7, scales = "free_y") +
facet_grid(~cluster~treatment, scales = "free_y") +
theme_bw() +
ylab("Metabolite Composition (nM)") +
xlab("Date") +
theme(axis.text.x=element_text(angle = 90, vjust = 0.5))
quant_nmds_heat_good <- data_vis_qual %>%
group_by(metabolite, treatment, date) %>%
summarise(avg_nmol = mean(nM)) %>%
ungroup() %>%
mutate(id = paste(date, treatment)) %>%
filter(!str_detect(treatment, "Tote"))
# %>%
#   filter(str_detect(metabolite, "Guanine|Arsenobetaine|Hydroxyisoleucine|Betonicine|Trigonelline|Gonyol|beta-Alanine|Glycine betaine|Carnitine|Sarcosine|L-Cystathionine|Ectoine|Proline betaine|L-Proline|Cytosine|Isethionic acid"))
heatmap_data_good <- quant_nmds_heat_good %>%
# group_by(metabolite) %>%
# filter(str_detect(treatment, "T0|27July")) %>%
# filter(avg_nmol >= 0.01) %>%
complete(metabolite, id, fill = list(avg_nmol = 0)) %>%
group_by(metabolite) %>%
mutate(norm_conc = rank(avg_nmol)) %>%
# mutate(norm_conc = (avg_nmol - min(avg_nmol)) / (max(avg_nmol) - min(avg_nmol))) %>%
filter(norm_conc != "NaN") %>%
select(metabolite, norm_conc, id) %>%
pivot_wider(names_from = "metabolite", values_from = "norm_conc") %>%
# mutate(id=factor(id, levels=c(heat_level_order_treat))) %>%
arrange(id) %>%
na.omit() %>%
column_to_rownames("id")
heatmap_data_good %>%
data.matrix() %>%
heatmaply(fontsize_row = 7, fontsize_col = 5)
# heatmaply(Rowv = FALSE, fontsize_row = 10, fontsize_col = 7)
# make clustered heatmap from scratch using pheatmap
quant_nmds_heat_good <- data_vis_qual %>%
group_by(metabolite, treatment, date) %>%
summarise(avg_nmol = mean(nM)) %>%
ungroup() %>%
mutate(id = paste(date, treatment))
# %>%
#   filter(str_detect(treatment, "RH|RL|LH|LL"))
heatmap_data_good <- quant_nmds_heat_good %>%
# group_by(metabolite) %>%
# filter(str_detect(treatment, "RH|RL|C|Tote")) %>%
# filter(avg_nmol >= 0.01) %>%
complete(metabolite, id, fill = list(avg_nmol = 0)) %>%
group_by(metabolite) %>%
mutate(norm_conc = rank(avg_nmol)) %>%
# mutate(norm_conc = (avg_nmol - min(avg_nmol)) / (max(avg_nmol) - min(avg_nmol))) %>%
# filter(norm_conc != "NaN") %>%
select(metabolite, norm_conc, id) %>%
pivot_wider(names_from = "metabolite", values_from = "norm_conc") %>%
mutate(id=factor(id, levels=c(heat_level_order_treat))) %>%
arrange(id) %>%
na.omit() %>%
column_to_rownames("id")
plotheatmap_good <- heatmap_data_good %>%
data.matrix() %>%
heatmaply(fontsize_row = 10, fontsize_col = 7) # %>%
# heatmaply(Rowv = FALSE, fontsize_row = 10, fontsize_col = 7)
# make clustered heatmap from scratch using pheatmap
plotheatmap_good
peri_pca_long <- data_vis_qual %>%
pivot_wider(names_from = metabolite, values_from = nM) %>%
select(-c("treatment", "date", "triplicate", "quality", "replicate")) %>%
# column_to_rownames("replicate") %>%
data.matrix() %>%
`[<-`(is.na(.), 0) %>%
PCA(ncp = 6)
peri_pca <- data_vis_qual %>%
#filter(!str_detect(replicate, "Tote")) %>%
pivot_wider(names_from = metabolite, values_from = nM) %>%
select(-c("treatment", "date", "triplicate", "quality", "replicate")) %>%
# column_to_rownames("replicate") %>%
data.matrix() %>%
`[<-`(is.na(.), 0) %>%
prcomp(center = TRUE, scale. = TRUE)
plot(peri_pca)
# data_vis_qual <- data_vis_qual %>%
#   filter(!str_detect(metabolite, "Amino hydroxypropanesulfonate"))
rate_ratio <- data_vis_qual %>%
mutate(ratio = str_extract(treatment, "R|L|Z|C|Tote")) %>%
mutate(rate = str_extract(treatment,  "H$|L$|C|F|Tote")) %>%
# mutate(rate = str_replace(rate, "F", "H")) %>%
mutate(replicate = str_remove(replicate, "230616_Smp_"))
pca_mat <- rate_ratio %>%
select(metabolite, replicate, nM) %>%
group_by(metabolite) %>%
mutate(nM = rank(nM)) %>%
pivot_wider(names_from = "metabolite", values_from = "nM") %>%
column_to_rownames("replicate") %>%
data.matrix() %>%
`[<-`(is.na(.), 0)
prcomp(pca_mat) %>%
pluck("x") %>%
as.data.frame() %>%
select(PC1:PC3) %>%
rownames_to_column("replicate") %>%
pivot_longer(starts_with("PC"), names_to = "PC", values_to = "PC_val") %>%
left_join(rate_ratio) %>%
# plotly::plot_ly(x=~PC1, y=~PC2, z=~PC3, color=~depth)
ggplot() +
# geom_point(aes(x=PC1, y=PC2, color=depth))
# geom_col(aes(x=filename, y=PC1, fill=depth))
geom_col(aes(x=replicate, y=PC_val, fill=ratio)) +
theme(axis.text.x=element_text(angle = 90, vjust = 0.5)) +
facet_wrap(~PC, ncol=1)
peri_pca_analysis <- prcomp(pca_mat) %>%
pluck("x") %>%
as.data.frame() %>%
select(PC1:PC2) %>%
rownames_to_column("replicate") %>%
# pivot_longer(starts_with("PC"), names_to = "PC", values_to = "PC_val") %>%
left_join(rate_ratio, by = "replicate")  %>%
mutate(PC1 = as.numeric(PC1)) %>%
mutate(PC2 = as.numeric(PC2))
peri_pca_analysis %>%
# filter(str_detect(replicate, "14July|21July")) %>%
filter(str_detect(rate, "H")) %>%
ggplot() +
geom_point(aes(x = PC1, y = PC2, color = ratio)) +
theme_bw() +
ggtitle("Rate = H") +
facet_wrap(~date, scales = "free")
peri_pca_analysis %>%
# filter(str_detect(replicate, "14July|21July")) %>%
filter(str_detect(rate, "L")) %>%
ggplot() +
geom_point(aes(x = PC1, y = PC2, color = ratio)) +
theme_bw() +
ggtitle("Rate = L") +
facet_wrap(~date, scales = "free")
peri_pca_analysis %>%
# filter(str_detect(replicate, "14July|21July")) %>%
filter(str_detect(ratio, "R")) %>%
ggplot() +
geom_point(aes(x = PC1, y = PC2, color = rate)) +
theme_bw() +
ggtitle("Ratio = R") +
facet_wrap(~date, scales = "free")
peri_pca_analysis %>%
# filter(str_detect(replicate, "14July|21July")) %>%
filter(str_detect(ratio, "L")) %>%
ggplot() +
geom_point(aes(x = PC1, y = PC2, color = rate)) +
theme_bw() +
ggtitle("Ratio = L") +
facet_wrap(~date, scales = "free")
peri_pca_analysis %>%
# filter(str_detect(replicate, "14July|21July")) %>%
filter(str_detect(ratio, "Z")) %>%
ggplot() +
geom_point(aes(x = PC1, y = PC2, color = rate)) +
theme_bw() +
ggtitle("Ratio = Z") +
facet_wrap(~date, scales = "free")
peri_pca_analysis %>%
# filter(str_detect(replicate, "14July|21July")) %>%
mutate(date_fct = factor(date)) %>%
filter(str_detect(ratio, "R")) %>%
ggplot() +
geom_point(aes(x = PC1, y = PC2, color = date_fct, shape = rate)) +
theme_bw() +
ggtitle("Ratio = R")
library(ggh4x)
peri_pca_analysis %>%
mutate(ratio = str_replace(ratio, "R", "16N:1P")) %>%
mutate(ratio = str_replace(ratio, "L", "6N:1P")) %>%
mutate(ratio = str_replace(ratio, "Z", "0N:1P")) %>%
# filter(str_detect(replicate, "21July")) %>%
filter(str_detect(rate, "H|L")) %>%
mutate(rate = str_replace(rate, "H", "High Dose of Nutrients")) %>%
mutate(rate = str_replace(rate, "L", "Low Dose of Nutrients")) %>%
ggplot(aes(x = PC1, y = PC2, group = factor(ratio, levels = c("0N:1P", "6N:1P", "16N:1P")))) +
# geom_point(aes(fill = ratio, color = ratio), size = 0.5) +
geom_point(aes(color = ratio), size = 0.75) +
geom_polygon(aes(fill = ratio), alpha = 0.5) +
#scale_color_discrete(name = "Ratio") +
theme_bw() +
facet_grid2(~rate~date, scales = "free", independent = "y")  +
theme(axis.text.x=element_text(angle = 90, vjust = 0.5, size = 10), axis.text.y = element_text(size = 10))
peri_pca_analysis %>%
mutate(rate = str_replace(rate, "H", "High Dose of Nutrients")) %>%
mutate(rate = str_replace(rate, "L", "Low Dose of Nutrients")) %>%
mutate(rate = str_replace(rate, "F", "High Dose of Nutrients-no Fe")) %>%
# filter(str_detect(replicate, "21July")) %>%
filter(str_detect(ratio, "R|L|Z")) %>%
# filter(str_detect(rate, "H|L")) %>%
mutate(ratio = str_replace(ratio, "R", "16N:1P")) %>%
mutate(ratio = str_replace(ratio, "L", "6N:1P")) %>%
mutate(ratio = str_replace(ratio, "Z", "0N:1P")) %>%
ggplot(aes(x = PC1, y = PC2, group = rate)) +
geom_point(aes(color = rate), size = 0.75) +
geom_polygon(aes(fill = rate), alpha = 0.5) +
# scale_fill_continuous(values = mycolors) +
theme_bw() +
facet_grid2(~factor(ratio, levels = c("0N:1P", "6N:1P", "16N:1P"))~date, scales = "free", independent = "y")  +
theme(axis.text.x=element_text(angle = 90, vjust = 0.5, size = 7), axis.text.y = element_text(size = 7))
# Chunk 1
library(tidyverse)
library(ggplot2)
library(RColorBrewer)
library(plotly)
library(vegan)
library(heatmaply)
library(ggnewscale)
library(readr)
library(readxl)
# library(corrr)
# library(ggcorrplot)
library(FactoMineR)
library(stats)
library(ggfortify)
library(ggh4x)
set.seed(20)
# Chunk 2
quant_data <- read_csv("csvs/quant_data.csv") %>%
filter(nM > 0) %>%
filter(nM < 100)
metadataframe <- read_csv("csvs/metadataframe.csv")
pcpn <- read_xlsx("metadata/peridice_pcpn.xlsx") %>%
select(tank = Tank, treatment = Treatment2, date = Date, pn = `PN (uM)`, pc = `PC (uM)`, cn = Cnratio,added_N_uM = AddN) %>%
mutate(triplicate = str_extract(tank, "\\d"))
data_vis <- quant_data %>%
mutate(treatment = str_extract(replicate, "Std|Poo|Blk|C|ZF|ZL|ZH|RL|RH|LL|LH|Tote")) %>%
mutate(timepoint = str_extract(replicate, "27June|30June|14July|21July|27July")) %>%
mutate(timepoint = str_replace_all(timepoint, "July", "-7-22")) %>%
mutate(timepoint = str_replace_all(timepoint, "June", "-6-22")) %>%
mutate(date = as.Date(timepoint, format = "%d-%m-%y")) %>%
select(metabolite, treatment, date, nM, replicate) %>%
filter(metabolite != "Sodium 2-mercaptoethanesulfonate") %>%
filter(metabolite != "Fumaric acid") %>%
na.omit() %>%
mutate(triplicate = str_extract(replicate, "\\d$"))
level_order <- c("T0", "C", "ZF", "ZL", "ZH", "LL", "LH", "RL", "RH")
heat_level_order_treat <- c("2022-06-27 Tote", "2022-06-30 C",  "2022-07-14 C",  "2022-07-21 C",  "2022-07-27 C",
"2022-06-30 ZF", "2022-07-14 ZF", "2022-07-21 ZF", "2022-07-27 ZF",
"2022-06-30 ZL", "2022-07-14 ZL", "2022-07-21 ZL", "2022-07-27 ZL",
"2022-06-30 ZH", "2022-07-14 ZH", "2022-07-21 ZH", "2022-07-27 ZH",
"2022-06-30 LL", "2022-07-14  LL", "2022-07-21 LL", "2022-07-27 LL",
"2022-06-30 LH", "2022-07-14 LH", "2022-07-21 LH", "2022-07-27 LH",
"2022-06-30 RL", "2022-07-14 RL", "2022-07-21 RL", "2022-07-27 RL",
"2022-06-30 RH", "2022-07-14 RH", "2022-07-21 RH", "2022-07-27 RH")
heat_level_order_date <- c("2022-06-27 Tote", "2022-06-30 C","2022-06-30 ZF", "2022-06-30 ZL",
"2022-06-30 ZH", "2022-06-30 LL","2022-06-30 LH", "2022-06-30 RL", "2022-06-30 RH",
"2022-07-14 C", "2022-07-14 ZF", "2022-07-14 ZL", "2022-07-14 ZH", "2022-07-14 LL",
"2022-07-14 LH", "2022-07-14 RL", "2022-07-14 RH",
"2022-07-21 C", "2022-07-21 ZF", "2022-07-21 ZL", "2022-07-21 ZH",
"2022-07-21 LL", "2022-07-21 LH", "2022-07-21 RL", "2022-07-21 RH",
"2022-07-27 C", "2022-07-27 ZF", "2022-07-27 ZL",
"2022-07-27 ZH", "2022-07-27 LL", "2022-07-27 LH", "2022-07-27 RL",  "2022-07-27 RH")
data_vis_norm <- data_vis %>%
left_join(pcpn) %>%
mutate(nmol_per_pc = nM/pc)
select(replicate, metabolite, treatment, date, nM, triplicate, nmol_per_pc)
rate_ratio <- data_vis_qual %>%
mutate(ratio = str_extract(treatment, "R|L|Z|C|Tote")) %>%
mutate(rate = str_extract(treatment,  "H$|L$|C|F|Tote")) %>%
# mutate(rate = str_replace(rate, "F", "H")) %>%
mutate(replicate = str_remove(replicate, "230616_Smp_"))
pca_mat <- rate_ratio %>%
select(metabolite, replicate, nM) %>%
group_by(metabolite) %>%
mutate(nM = rank(nM)) %>%
pivot_wider(names_from = "metabolite", values_from = "nM") %>%
column_to_rownames("replicate") %>%
data.matrix() %>%
`[<-`(is.na(.), 0)
prcomp(pca_mat) %>%
pluck("x") %>%
as.data.frame() %>%
select(PC1:PC3) %>%
rownames_to_column("replicate") %>%
pivot_longer(starts_with("PC"), names_to = "PC", values_to = "PC_val") %>%
left_join(rate_ratio) %>%
# plotly::plot_ly(x=~PC1, y=~PC2, z=~PC3, color=~depth)
ggplot() +
# geom_point(aes(x=PC1, y=PC2, color=depth))
# geom_col(aes(x=filename, y=PC1, fill=depth))
geom_col(aes(x=replicate, y=PC_val, fill=ratio)) +
theme(axis.text.x=element_text(angle = 90, vjust = 0.5)) +
facet_wrap(~PC, ncol=1)
View(peri_pca_analysis)
library(tidyverse)
library(ggplot2)
library(RColorBrewer)
library(plotly)
library(vegan)
library(heatmaply)
library(ggnewscale)
library(readr)
library(readxl)
# library(corrr)
# library(ggcorrplot)
library(FactoMineR)
library(stats)
library(ggfortify)
library(ggh4x)
set.seed(20)

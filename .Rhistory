"Redfield Ratio of N:P, low dose added", "Redfield Ratio of N:P, high dose added")) +
guides(fill=guide_legend(ncol=2)) +
theme_bw() +
# ggtitle("Timeseries") +
xlab("Date") +
ylab("nM (nmol per L)")
data_vis %>%
group_by(metabolite, treatment, date) %>%
mutate(nmol_avg = mean(nM)) %>%
mutate(sd = sd(nM)) %>%
slice(1) %>%
distinct(nmol_avg, .keep_all = TRUE) %>%
# mutate(col_id=case_when(
#   treatment=="C"~"plum2",
#   treatment=="ZL"~"darkslategray2",
#   treatment=="ZH"~"lightseagreen",
#   treatment=="LL"~"gold",
#   treatment=="LH"~"lightcoral",
#   treatment=="RL"~"orange",
#   treatment=="RH"~"brown3",
#   treatment=="ZF"~"mediumpurple3",
#   TRUE~"grey50"
# )) %>%
filter(str_detect(metabolite, "Proline betaine")) %>%
# filter(str_detect(treatment, "RH|RL")) %>%
ggplot(aes(x = date, y = nmol_avg, color = factor(treatment, levels = level_order))) +
geom_line() +
geom_point() +
# geom_errorbar(aes(ymin = nmol_avg - sd, ymax = nmol_avg + sd)) +
scale_color_manual(values = c("grey50", "plum2", "mediumpurple3", "darkslategray2",
"lightseagreen", "gold", "lightcoral", "orange", "brown3"),
labels = c("T0", "Control - no nutrients added", "No Nitrogen or Phosphorus, low amount of Iron added",
"No Nitrogen, low amount of Phosphorus and Iron added", "No Nitrogen, high amount of Phosphorus and Iron added",
"Lower (than Redfield) ratio of N:P, low dose added", "Lower (than Redfield) ratio of N:P, high dose added",
"Redfield Ratio of N:P, low dose added", "Redfield Ratio of N:P, high dose added")) +
guides(fill=guide_legend(ncol=2)) +
theme_bw() +
# ggtitle("Timeseries") +
xlab("Date") +
ylab("nM (nmol per L)")
data_vis %>%
group_by(metabolite, treatment, date) %>%
mutate(nmol_avg = mean(nM)) %>%
mutate(sd = sd(nM)) %>%
slice(1) %>%
distinct(nmol_avg, .keep_all = TRUE) %>%
# mutate(col_id=case_when(
#   treatment=="C"~"plum2",
#   treatment=="ZL"~"darkslategray2",
#   treatment=="ZH"~"lightseagreen",
#   treatment=="LL"~"gold",
#   treatment=="LH"~"lightcoral",
#   treatment=="RL"~"orange",
#   treatment=="RH"~"brown3",
#   treatment=="ZF"~"mediumpurple3",
#   TRUE~"grey50"
# )) %>%
filter(str_detect(metabolite, "Proline betaine")) %>%
# filter(str_detect(treatment, "RH|RL")) %>%
ggplot(aes(x = date, y = nmol_avg, color = factor(treatment, levels = level_order))) +
geom_line() +
geom_point() +
# geom_errorbar(aes(ymin = nmol_avg - sd, ymax = nmol_avg + sd)) +
scale_color_manual(values = c("grey50", "plum2", "mediumpurple3", "darkslategray2",
"lightseagreen", "gold", "lightcoral", "orange", "brown3"),
labels = c("T0", "Control - no nutrients added", "No Nitrogen or Phosphorus, low amount of Iron added",
"No Nitrogen, low amount of Phosphorus and Iron added", "No Nitrogen, high amount of Phosphorus and Iron added",
"Lower (than Redfield) ratio of N:P, low dose added", "Lower (than Redfield) ratio of N:P, high dose added",
"Redfield Ratio of N:P, low dose added", "Redfield Ratio of N:P, high dose added"),
name = "Treatment") +
guides(fill=guide_legend(ncol=2)) +
theme_bw() +
# ggtitle("Timeseries") +
xlab("Date") +
ylab("nM (nmol per L)")
data_vis %>%
group_by(metabolite, treatment, date) %>%
mutate(nmol_avg = mean(nM)) %>%
mutate(sd = sd(nM)) %>%
slice(1) %>%
distinct(nmol_avg, .keep_all = TRUE) %>%
# mutate(col_id=case_when(
#   treatment=="C"~"plum2",
#   treatment=="ZL"~"darkslategray2",
#   treatment=="ZH"~"lightseagreen",
#   treatment=="LL"~"gold",
#   treatment=="LH"~"lightcoral",
#   treatment=="RL"~"orange",
#   treatment=="RH"~"brown3",
#   treatment=="ZF"~"mediumpurple3",
#   TRUE~"grey50"
# )) %>%
filter(str_detect(metabolite, "Proline betaine")) %>%
# filter(str_detect(treatment, "RH|RL")) %>%
ggplot(aes(x = date, y = nmol_avg, color = factor(treatment, levels = level_order))) +
geom_line() +
geom_point() +
# geom_errorbar(aes(ymin = nmol_avg - sd, ymax = nmol_avg + sd)) +
scale_color_manual(values = c("grey50", "plum2", "mediumpurple3", "darkslategray2",
"lightseagreen", "gold", "lightcoral", "orange", "brown3"),
labels = c("T0", "Control - no nutrients added", "No Nitrogen or Phosphorus, low amount of Iron added",
"No Nitrogen, low amount of Phosphorus and Iron added", "No Nitrogen, high amount of Phosphorus and Iron added",
"Lower (than Redfield) ratio of N:P, low dose added", "Lower (than Redfield) ratio of N:P, high dose added",
"Redfield Ratio of N:P, low dose added", "Redfield Ratio of N:P, high dose added"),
name = "Treatment") +
guides(fill=guide_legend(ncol=2)) +
theme_bw() +
ggtitle("Timeseries of Proline Betaine, Summarised by Triplicate") +
xlab("Date") +
ylab("nM (nmol per L)")
data_vis %>%
group_by(metabolite, treatment, date) %>%
mutate(nmol_avg = mean(nM)) %>%
mutate(sd = sd(nM)) %>%
slice(1) %>%
distinct(nmol_avg, .keep_all = TRUE) %>%
mutate(col_id=case_when(
treatment=="C"~"plum2",
treatment=="ZL"~"darkslategray2",
treatment=="ZH"~"lightseagreen",
treatment=="LL"~"gold",
treatment=="LH"~"lightcoral",
treatment=="RL"~"orange",
treatment=="RH"~"brown3",
treatment=="ZF"~"mediumpurple3",
TRUE~"grey50"
)) %>%
filter(str_detect(metabolite, "Proline betaine")) %>%
# filter(str_detect(treatment, "RH|RL")) %>%
ggplot(aes(x = date, y = nmol_avg, color = factor(col_id, levels = level_order))) +
geom_line() +
geom_point() +
geom_errorbar(aes(ymin = nmol_avg - sd, ymax = nmol_avg + sd)) +
scale_color_identity(name = "treatment", guide = "legend", labels = c("Redfield Ratio - High Added N and P", "No N - Low Added P",
"Low N:P - Low Added N", "T0 - Before Treatments",
"Low N:P - High Added N", "No N - High Added P", "No Fe - High Added P",
"Redfield Ratio - Low Added N and P", "Control")) +
guides(fill=guide_legend(ncol=2)) +
theme_bw() +
# ggtitle("Timeseries") +
xlab("Date") +
ylab("nM (nmol per L)")
data_vis %>%
group_by(metabolite, treatment, date) %>%
mutate(nmol_avg = mean(nM)) %>%
mutate(sd = sd(nM)) %>%
slice(1) %>%
distinct(nmol_avg, .keep_all = TRUE) %>%
# mutate(col_id=case_when(
#   treatment=="C"~"plum2",
#   treatment=="ZL"~"darkslategray2",
#   treatment=="ZH"~"lightseagreen",
#   treatment=="LL"~"gold",
#   treatment=="LH"~"lightcoral",
#   treatment=="RL"~"orange",
#   treatment=="RH"~"brown3",
#   treatment=="ZF"~"mediumpurple3",
#   TRUE~"grey50"
# )) %>%
filter(str_detect(metabolite, "Proline betaine")) %>%
# filter(str_detect(treatment, "RH|RL")) %>%
ggplot(aes(x = date, y = nmol_avg, color = factor(treatment, levels = level_order))) +
geom_line() +
geom_point() +
geom_errorbar(aes(ymin = nmol_avg - sd, ymax = nmol_avg + sd)) +
scale_color_identity(name = "treatment", guide = "legend", labels = c("Redfield Ratio - High Added N and P", "No N - Low Added P",
"Low N:P - Low Added N", "T0 - Before Treatments",
"Low N:P - High Added N", "No N - High Added P", "No Fe - High Added P",
"Redfield Ratio - Low Added N and P", "Control")) +
guides(fill=guide_legend(ncol=2)) +
theme_bw() +
# ggtitle("Timeseries") +
xlab("Date") +
ylab("nM (nmol per L)")
data_vis %>%
group_by(metabolite, treatment, date) %>%
mutate(nmol_avg = mean(nM)) %>%
mutate(sd = sd(nM)) %>%
slice(1) %>%
distinct(nmol_avg, .keep_all = TRUE) %>%
# mutate(col_id=case_when(
#   treatment=="C"~"plum2",
#   treatment=="ZL"~"darkslategray2",
#   treatment=="ZH"~"lightseagreen",
#   treatment=="LL"~"gold",
#   treatment=="LH"~"lightcoral",
#   treatment=="RL"~"orange",
#   treatment=="RH"~"brown3",
#   treatment=="ZF"~"mediumpurple3",
#   TRUE~"grey50"
# )) %>%
filter(str_detect(metabolite, "Proline betaine")) %>%
# filter(str_detect(treatment, "RH|RL")) %>%
ggplot(aes(x = date, y = nmol_avg, color = factor(treatment, levels = level_order))) +
geom_line() +
geom_point() +
# geom_errorbar(aes(ymin = nmol_avg - sd, ymax = nmol_avg + sd)) +
scale_color_manual(values = c("grey50", "plum2", "mediumpurple3", "darkslategray2",
"lightseagreen", "gold", "lightcoral", "orange", "brown3"),
labels = c("T0", "Control - no nutrients added", "No Nitrogen or Phosphorus, low amount of Iron added",
"No Nitrogen, low amount of Phosphorus and Iron added", "No Nitrogen, high amount of Phosphorus and Iron added",
"Lower (than Redfield) ratio of N:P, low dose added", "Lower (than Redfield) ratio of N:P, high dose added",
"Redfield Ratio of N:P, low dose added", "Redfield Ratio of N:P, high dose added"),
name = "Treatment") +
guides(fill=guide_legend(ncol=2)) +
theme_bw() +
ggtitle("Timeseries of Proline Betaine, Summarised by Triplicate") +
xlab("Date") +
ylab("nM (nmol per L)")
plotheatmap <- quant_nmds_heat %>%
group_by(metabolite) %>%
mutate(norm_conc = rank(avg_nmol)) %>%
# filter(str_detect(treatment, "RH|RL|C|Tote")) %>%
# filter(avg_nmol >= 0.01) %>%
select(metabolite, norm_conc, id) %>%
pivot_wider(names_from = "metabolite", values_from = "norm_conc", values_fill = 0) %>%
mutate(id=factor(id, levels=c(heat_level_order_treat))) %>%
arrange(id) %>%
column_to_rownames("id") %>%
data.matrix() %>%
# heatmaply(fontsize_row = 10, fontsize_col = 7) %>%
heatmaply(Rowv = FALSE, fontsize_row = 10, fontsize_col = 7)
heat_level_order_treat <- c("2022-06-27 Tote", "2022-06-30 C",  "2022-07-14 C",  "2022-07-21 C",  "2022-07-27 C",  "2022-06-30 LH",
"2022-07-14 LH", "2022-07-21 LH", "2022-07-27 LH", "2022-06-30 LL", "2022-07-14 LL",
"2022-07-21 LL", "2022-07-27 LL", "2022-06-30 RH", "2022-07-14 RH", "2022-07-21 RH",
"2022-07-27 RH", "2022-06-30 RL", "2022-07-14 RL", "2022-07-21 RL", "2022-07-27 RL",
"2022-06-30 ZF", "2022-07-14 ZF", "2022-07-21 ZF", "2022-07-27 ZF", "2022-06-30 ZH",
"2022-07-14 ZH", "2022-07-21 ZH", "2022-07-27 ZH", "2022-06-30 ZL", "2022-07-14 ZL",
"2022-07-21 ZL", "2022-07-27 ZL")
plotheatmap <- quant_nmds_heat %>%
group_by(metabolite) %>%
mutate(norm_conc = rank(avg_nmol)) %>%
# filter(str_detect(treatment, "RH|RL|C|Tote")) %>%
# filter(avg_nmol >= 0.01) %>%
select(metabolite, norm_conc, id) %>%
pivot_wider(names_from = "metabolite", values_from = "norm_conc", values_fill = 0) %>%
mutate(id=factor(id, levels=c(heat_level_order_treat))) %>%
arrange(id) %>%
column_to_rownames("id") %>%
data.matrix() %>%
# heatmaply(fontsize_row = 10, fontsize_col = 7) %>%
heatmaply(Rowv = FALSE, fontsize_row = 10, fontsize_col = 7)
plotheatmap <- quant_nmds_heat %>%
group_by(metabolite) %>%
mutate(norm_conc = rank(avg_nmol)) %>%
# filter(str_detect(treatment, "RH|RL|C|Tote")) %>%
# filter(avg_nmol >= 0.01) %>%
select(metabolite, norm_conc, id) %>%
pivot_wider(names_from = "metabolite", values_from = "norm_conc", values_fill = 0) %>%
mutate(id=factor(id, levels=c(heat_level_order_treat))) %>%
arrange(id) %>%
column_to_rownames("id") %>%
data.matrix() %>%
# heatmaply(fontsize_row = 10, fontsize_col = 7) %>%
heatmaply(Rowv = FALSE, fontsize_row = 10, fontsize_col = 7)
plotheatmap
heat_level_order_treat <- c("2022-06-27 Tote", "2022-06-30 C",  "2022-07-14 C",  "2022-07-21 C",  "2022-07-27 C",
"2022-06-30 ZF", "2022-07-14 ZF", "2022-07-21 ZF", "2022-07-27 ZF",
"2022-06-30 ZL", "2022-07-14 ZL", "2022-07-21 ZL", "2022-07-27 ZL",
"2022-06-30 ZH", "2022-07-14 ZH", "2022-07-21 ZH", "2022-07-27 ZH",
"2022-06-30 LL", "2022-07-14 LL", "2022-07-21 LL", "2022-07-27 LL",
"2022-06-30 LH", "2022-07-14 LH", "2022-07-21 LH", "2022-07-27 LH",
"2022-06-30 RL", "2022-07-14 RL", "2022-07-21 RL", "2022-07-27 RL",
"2022-06-30 RH", "2022-07-14 RH", "2022-07-21 RH", "2022-07-27 RH")
heat_level_order_treat <- c("2022-06-27 Tote", "2022-06-30 C",  "2022-07-14 C",  "2022-07-21 C",  "2022-07-27 C",
"2022-06-30 ZF", "2022-07-14 ZF", "2022-07-21 ZF", "2022-07-27 ZF",
"2022-06-30 ZL", "2022-07-14 ZL", "2022-07-21 ZL", "2022-07-27 ZL",
"2022-06-30 ZH", "2022-07-14 ZH", "2022-07-21 ZH", "2022-07-27 ZH",
"2022-06-30 LL", "2022-07-14 LL", "2022-07-21 LL", "2022-07-27 LL",
"2022-06-30 LH", "2022-07-14 LH", "2022-07-21 LH", "2022-07-27 LH",
"2022-06-30 RL", "2022-07-14 RL", "2022-07-21 RL", "2022-07-27 RL",
"2022-06-30 RH", "2022-07-14 RH", "2022-07-21 RH", "2022-07-27 RH")
plotheatmap <- quant_nmds_heat %>%
group_by(metabolite) %>%
mutate(norm_conc = rank(avg_nmol)) %>%
# filter(str_detect(treatment, "RH|RL|C|Tote")) %>%
# filter(avg_nmol >= 0.01) %>%
select(metabolite, norm_conc, id) %>%
pivot_wider(names_from = "metabolite", values_from = "norm_conc", values_fill = 0) %>%
mutate(id=factor(id, levels=c(heat_level_order_treat))) %>%
arrange(id) %>%
column_to_rownames("id") %>%
data.matrix() %>%
# heatmaply(fontsize_row = 10, fontsize_col = 7) %>%
heatmaply(Rowv = FALSE, fontsize_row = 10, fontsize_col = 7)
plotheatmap
plotheatmap <- quant_nmds_heat %>%
group_by(metabolite) %>%
mutate(norm_conc = rank(avg_nmol)) %>%
# filter(str_detect(treatment, "RH|RL|C|Tote")) %>%
# filter(avg_nmol >= 0.01) %>%
select(metabolite, norm_conc, id) %>%
pivot_wider(names_from = "metabolite", values_from = "norm_conc", values_fill = 0) %>%
mutate(id=factor(id, levels=c(heat_level_order_treat))) %>%
arrange(id) %>%
column_to_rownames("id") %>%
data.matrix() %>%
heatmaply(fontsize_row = 10, fontsize_col = 7) # %>%
plotheatmap <- quant_nmds_heat %>%
group_by(metabolite) %>%
mutate(norm_conc = rank(avg_nmol)) %>%
# filter(str_detect(treatment, "RH|RL|C|Tote")) %>%
# filter(avg_nmol >= 0.01) %>%
select(metabolite, norm_conc, id) %>%
pivot_wider(names_from = "metabolite", values_from = "norm_conc", values_fill = 0) %>%
mutate(id=factor(id, levels=c(heat_level_order_treat))) %>%
arrange(id) %>%
column_to_rownames("id") %>%
data.matrix() %>%
heatmaply(fontsize_row = 10, fontsize_col = 7) # %>%
plotheatmap
foldchange <- data.frame(metabolite = character(), date = character(), treatment = character(), pval = numeric(), fc = numeric())
data_vis_fc <- data_vis %>%
mutate(id = paste(date, treatment))
for (metabolite in unique(data_vis_fc$metabolite)) {
for (group in unique(data_vis_fc$id)) {
if (group != 'Tote') {
temp <- data_vis[data_vis_fc$metabolite == metabolite,]
pval <- t.test(temp[temp$treatment == 'Tote',]$nM,
temp[temp$treatment == group,]$nM)$p.value
fc <- (log2(mean(temp[temp$treatment == group,]$nM) + 1) -
log2(mean(temp[temp$treatment == 'Tote',]$nM) + 1))
new_row <- data.frame(metabolite = metabolite, treatment = group, pval = pval, fc = fc)
foldchange <- rbind(foldchange, new_row)
}
}
}
View(data_vis_fc)
if (group != '2022-06-27 Tote') {
temp <- data_vis[data_vis_fc$metabolite == metabolite,]
pval <- t.test(temp[temp$treatment == 'Tote',]$nM,
temp[temp$treatment == group,]$nM)$p.value
fc <- (log2(mean(temp[temp$treatment == group,]$nM) + 1) -
log2(mean(temp[temp$treatment == 'Tote',]$nM) + 1))
new_row <- data.frame(metabolite = metabolite, treatment = group, pval = pval, fc = fc)
foldchange <- rbind(foldchange, new_row)
}
for (metabolite in unique(data_vis_fc$metabolite)) {
for (group in unique(data_vis_fc$id)) {
if (group != '2022-06-27 Tote') {
temp <- data_vis[data_vis_fc$metabolite == metabolite,]
pval <- t.test(temp[temp$treatment == 'Tote',]$nM,
temp[temp$treatment == group,]$nM)$p.value
fc <- (log2(mean(temp[temp$treatment == group,]$nM) + 1) -
log2(mean(temp[temp$treatment == 'Tote',]$nM) + 1))
new_row <- data.frame(metabolite = metabolite, treatment = group, pval = pval, fc = fc)
foldchange <- rbind(foldchange, new_row)
}
}
}
if (group != '2022-06-27 Tote') {
temp <- data_vis[data_vis_fc$metabolite == metabolite,]
View(temp)
View(temp)
temp <- data_vis[data_vis_fc$metabolite == metabolite,]
View(temp)
pval <- t.test(temp[temp$treatment == 'Tote',]$nM,
temp[temp$treatment == group,]$nM)$p.value
pval <- t.test(temp[temp$treatment == treatment,]$nM)$p.value
fc <- (log2(mean(temp[temp$treatment == group,]$nM) + 1) -
log2(mean(temp[temp$treatment == '2022-06-27 Tote',]$nM) + 1))
for (metabolite in unique(data_vis_fc$metabolite)) {
for (group in unique(data_vis_fc$id)) {
if (group != '2022-06-27 Tote') {
temp <- data_vis[data_vis_fc$metabolite == metabolite,]
pval <- t.test(temp[temp$id == '2022-06-27 Tote',]$nM,
temp[temp$treatment == group,]$nM)$p.value
fc <- (log2(mean(temp[temp$treatment == group,]$nM) + 1) -
log2(mean(temp[temp$treatment == '2022-06-27 Tote',]$nM) + 1))
new_row <- data.frame(metabolite = metabolite, treatment = group, pval = pval, fc = fc)
foldchange <- rbind(foldchange, new_row)
}
}
}
temp <- data_vis_fc[data_vis_fc$metabolite == metabolite,]
for (metabolite in unique(data_vis_fc$metabolite)) {
for (group in unique(data_vis_fc$id)) {
if (group != '2022-06-27 Tote') {
temp <- data_vis_fc[data_vis_fc$metabolite == metabolite,]
pval <- t.test(temp[temp$id == '2022-06-27 Tote',]$nM,
temp[temp$treatment == group,]$nM)$p.value
fc <- (log2(mean(temp[temp$treatment == group,]$nM) + 1) -
log2(mean(temp[temp$treatment == '2022-06-27 Tote',]$nM) + 1))
new_row <- data.frame(metabolite = metabolite, treatment = group, pval = pval, fc = fc)
foldchange <- rbind(foldchange, new_row)
}
}
}
View(data_vis_fc)
temp <- data_vis_fc[data_vis_fc$metabolite == metabolite,]
View(temp)
for (metabolite in unique(data_vis_fc$metabolite)) {
for (group in unique(data_vis_fc$id)) {
temp <- data_vis_fc[data_vis_fc$metabolite == metabolite,]
pval <- t.test(temp[temp$id == '2022-06-27 Tote',]$nM,
temp[temp$treatment == group,]$nM)$p.value
fc <- (log2(mean(temp[temp$treatment == group,]$nM) + 1) -
log2(mean(temp[temp$treatment == '2022-06-27 Tote',]$nM) + 1))
new_row <- data.frame(metabolite = metabolite, treatment = group, pval = pval, fc = fc)
foldchange <- rbind(foldchange, new_row)
}
}
fc <- (log2(mean(temp[temp$id == group,]$nM) + 1) -
log2(mean(temp[temp$id == '2022-06-27 Tote',]$nM) + 1))
foldchange <- rbind(foldchange, new_row)
for (metabolite in unique(data_vis_fc$metabolite)) {
for (group in unique(data_vis_fc$id)) {
temp <- data_vis_fc[data_vis_fc$metabolite == metabolite,]
pval <- t.test(temp[temp$id == '2022-06-27 Tote',]$nM,
temp[temp$id == group,]$nM)$p.value
fc <- (log2(mean(temp[temp$id == group,]$nM) + 1) -
log2(mean(temp[temp$id == '2022-06-27 Tote',]$nM) + 1))
new_row <- data.frame(metabolite = metabolite, treatment = group, pval = pval, fc = fc)
foldchange <- rbind(foldchange, new_row)
}
}
View(data_vis_fc)
foldchange <- data.frame(metabolite = character(), id = character(), pval = numeric(), fc = numeric())
for (group in unique(data_vis_fc$id)) {
if (group != "2022-06-27 Tote") {
temp <- data_vis_fc[data_vis_fc$metabolite == metabolite,]
pval <- t.test(temp[temp$id == '2022-06-27 Tote',]$nM,
temp[temp$id == group,]$nM)$p.value
fc <- (log2(mean(temp[temp$id == group,]$nM) + 1) -
log2(mean(temp[temp$id == '2022-06-27 Tote',]$nM) + 1))
new_row <- data.frame(metabolite = metabolite, id = group, pval = pval, fc = fc)
foldchange <- rbind(foldchange, new_row)
}
}
temp <- data_vis_fc[data_vis_fc$metabolite == metabolite,]
pval <- t.test(temp[temp$id == '2022-06-27 Tote',]$nM,
temp[temp$id == group,]$nM)$p.value
View(temp)
pval <- t.test(temp[temp$id == '2022-06-27 Tote',]$nM,
temp[temp$id == group,]$nM)$p.value
temp[temp$id == '2022-06-27 Tote',]$nM
temp[temp$id == group,]$nM
fc <- (log2(mean(temp[temp$id == group,]$nM) + 1) -
log2(mean(temp[temp$id == '2022-06-27 Tote',]$nM) + 1))
pval <- t.test(temp[temp$id == '2022-06-27 Tote',]$nM,
temp[temp$id == group,]$nM)$p.value
data_pval <- data_vis_fc %>%
mutate(t.test(nM ~ id))
data_pval <- data_vis_fc %>%
group_by(metabolite, id) %>%
mutate(t.test(nM))
data_pval <- data_vis_fc %>%
group_by(metabolite, id) %>%
mutate(t.test(nM~id))
data_pval <- data_vis_fc %>%
group_by(metabolite, id) %>%
mutate(t.test(nM~treatment))
data_pval <- data_vis_fc %>%
group_by(metabolite, id) %>%
t.test(nM, id)
data_pval <- data_vis_fc %>%
group_by(metabolite, id) %>%
t.test(nM, metabolite)
data_pval <- data_vis_fc %>%
group_by(metabolite, id) %>%
t.test(nM, metabolite, alternative = "two.sided")
View(data_vis_fc)
data_pval <- data_vis_fc %>%
group_by(metabolite, id) %>%
t.test(data_vis_fc$nM, metabolite, alternative = "two.sided")
head(data_vis_fc)
data_pval <- data_vis_fc %>%
group_by(metabolite, id) %>%
t.test(data_vis_fc$nM, data_vis_fc$id, alternative = "two.sided")
data_pval <- data_vis_fc %>%
group_by(metabolite, id) %>%
t.test(data_vis_fc$nM, data_vis_fc$metabolite, alternative = "two.sided")
data_pval <- data_vis_fc %>%
t.test(data_vis_fc$nM, data_vis_fc$id, alternative = "two.sided")
data_vis_fc <- data_vis %>%
mutate(id = paste(date, treatment)) %>%
mutate(id_fct = factor(id))
data_pval <- data_vis_fc %>%
t.test(data_vis_fc$nM, data_vis_fc$id_fct, alternative = "two.sided")
t.test(nM ~ id, data = data_vis_fc, alternative = c("two.sided"))
t.test(nM ~ id, data = data_vis_fc, alternative = c("two.sided"), paired = TRUE)
t.test(nM ~ id, data = data_vis_fc, alternative = c("two.sided"), paired = FALSE)
t.test(nM ~ id, data = data_vis_fc, alternative = c("two.sided"), paired = FALSE)
t.test(nM, id, data = data_vis_fc, alternative = c("two.sided"), paired = FALSE)
View(data_vis_fc)
View(data_vis_fc)
data_vis_fc <- data_vis %>%
mutate(id = paste(date, treatment)) %>%
mutate(id_fct = factor(id)) %>%
mutate(id_num = as.numeric(id_fct))
View(data_vis_fc)
data_pval <- data_vis_fc %>%
t.test(data_vis_fc$nM, data_vis_fc$id_fct, alternative = "two.sided")
t.test(nM, id, data = data_vis_fc, alternative = c("two.sided"), paired = FALSE)
pval <- t.test(temp[temp$id_num == '2022-06-27 Tote',]$nM,
temp[temp$id_num == group,]$nM)$p.value
pval <- t.test(temp[temp$id_num == '1',]$nM,
temp[temp$id_num == group,]$nM)$p.value
for (group in unique(data_vis_fc$id)) {
if (group != "2022-06-27 Tote") {
temp <- data_vis_fc[data_vis_fc$metabolite == metabolite,]
pval <- t.test(temp[temp$id == '2022-06-27 Tote',]$nM,
temp[temp$id == group,]$nM)$p.value
fc <- (log2(mean(temp[temp$id == group,]$nM) + 1) -
log2(mean(temp[temp$id == '2022-06-27 Tote',]$nM) + 1))
new_row <- data.frame(metabolite = metabolite, id = group, pval = pval, fc = fc)
foldchange <- rbind(foldchange, new_row)
}
}
library(tidyverse)
library(ggplot2)
library(tidyverse)

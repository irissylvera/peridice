mdsout <- peri_mat %>%
metaMDS(k = 2, autotransform = FALSE)
mds_data <- metadataframe
mdsout$points %>%
as.data.frame() %>%
rownames_to_column("filename") %>%
left_join(mds_data) %>%
mutate(col_id=case_when(
treatment=="C"~"plum2",
treatment=="ZL"~"darkslategray2",
treatment=="ZH"~"lightseagreen",
treatment=="LL"~"gold",
treatment=="LH"~"lightcoral",
treatment=="RL"~"orange",
treatment=="RH"~"brown3",
treatment=="ZF"~"mediumpurple3",
TRUE~"grey50"
)) %>%
ggplot() +
geom_point(aes(x=MDS1, y=MDS2, color=timepoint, label = filename), size=4) +
# scale_color_identity(guide = "legend", ) +
theme_bw()
ggplotly()
mdsout$points %>%
as.data.frame() %>%
rownames_to_column("filename") %>%
left_join(mds_data) %>%
mutate(col_id=case_when(
treatment=="C"~"plum2",
treatment=="ZL"~"darkslategray2",
treatment=="ZH"~"lightseagreen",
treatment=="LL"~"gold",
treatment=="LH"~"lightcoral",
treatment=="RL"~"orange",
treatment=="RH"~"brown3",
treatment=="ZF"~"mediumpurple3",
TRUE~"grey50"
)) %>%
ggplot() +
geom_point(aes(x=MDS1, y=MDS2, color=replicate, label = filename), size=4) +
# scale_color_identity(guide = "legend", ) +
theme_bw()
View(peri_mat)
mdsout$points %>%
as.data.frame() %>%
rownames_to_column("filename") %>%
left_join(mds_data)
mdsout$points %>%
as.data.frame() %>%
rownames_to_column("filename") %>%
left_join(mds_data)
View(mds_data)
View(metadataframe)
View(metadataframe)
# extract metadata from filenames
metadataframe <- raw_data %>%
# Grab just the unique filenames and rename the column
distinct(filename=`raw_data`) %>%
mutate(filename = str_remove(filename, "HILICpos//230616_")) %>%
# Extract treatment information from the filename
# Longest one needs to go first!")) %>%
# Create a new column with timepoint information
mutate(treatment = str_extract(filename, "Std|Poo|Blk|C|ZF|ZL|ZH|RL|RH|LL|LH|Tote")) %>%
mutate(timepoint=str_extract(filename, "27June|30June|14July|21July|27July")) %>%
mutate(replicate = str_extract(filename, "\\d.mzML")) %>%
mutate(replicate = str_remove(replicate, ".mzML")) %>%
# Create a new column with sample type information
mutate(samp_type=str_extract(filename, "Blk|Smp|Std|Poo")) %>%
#mutate(treatment=ifelse(samp_type=="Poo", NA, treatment)) %>%
mutate(colid = treatment)
View(metadataframe)
source('scripts/dataframe_setup.R')
peak_data_area_norm <- peak_data_clean %>%
left_join(filt_data, by = join_by(timepoint, treatment, replicate)) %>%
mutate(area_per_L = area/vol_L_filt) %>%
select(-c(`filename.y`)) %>%
rename(filename = `filename.x`) %>%
mutate(treatment = str_extract(treatment, "Std|Poo|Blk|C|ZF|ZL|ZH|RL|RH|LL|LH|Tote")) %>%
mutate(timepoint = str_replace_all(timepoint, "14July", "7-14")) %>%
mutate(timepoint = str_replace_all(timepoint, "21July", "7-21")) %>%
mutate(timepoint = str_replace_all(timepoint, "30June", "6-30")) %>%
mutate(timepoint = str_replace_all(timepoint, "27July", "7-27")) %>%
mutate(timepoint = str_replace_all(timepoint, "27June", "6-27")) %>%
mutate(date =as.Date(timepoint, format="%m-%d"))
chosen_feats <- read_csv("csvs/chosen_feats.csv")
peak_data_norm_good <- peak_data_area_norm %>%
filter(samp_type=="Smp") %>%
select(compound, filename, area_per_L, mz, rt, treatment, timepoint, date) %>%
filter(compound%in%chosen_feats$feature) %>%
group_by(compound, filename) %>%
mutate(n=n()) %>%
group_by(compound) %>%
filter(all(n==1)) %>%
ungroup() %>%
complete(compound, filename, fill=list(area=0)) %>%
select(-n) %>%
mutate()
write.csv(peak_data_norm_good, file = "csvs/untargeted_peak_list.csv", row.names = FALSE)
set.seed(20)
peak_data_nmds <- peak_data_area_norm %>%
arrange(desc(area_per_L)) %>%
group_by(compound, filename) %>%
# summarise(n=n()) %>%
# filter(n > 1)
slice(1)
peak_data_nmds <- peak_data_area_norm %>%
arrange(desc(area_per_L)) %>%
group_by(compound, filename) %>%
# summarise(n=n()) %>%
# filter(n > 1)
slice(1)
peak_data_nmds <- peak_data_nmds %>%
ungroup() %>%
complete(compound, filename) %>%
# filter(is.na(area_per_L)) %>%
mutate(area_per_L = replace_na(area_per_L, 0))
source('scripts/dataframe_setup.R')
peri_mat <- peak_data_nmds %>%
group_by(compound) %>%
mutate(norm_area=rank(area_per_L)) %>%
pivot_wider(id_cols = filename, id_expand = TRUE, names_from = "compound", values_from = "norm_area") %>%
column_to_rownames("filename") %>%
data.matrix()
mdsout <- peri_mat %>%
metaMDS(k = 2, autotransform = FALSE)
mdsout <- peri_mat %>%
metaMDS(k = 2, autotransform = FALSE)
mds_data <- metadataframe
View(mds_data)
mdsout$points %>%
as.data.frame() %>%
rownames_to_column("filename") %>%
left_join(mds_data) %>%
mutate(col_id=case_when(
treatment=="C"~"plum2",
treatment=="ZL"~"darkslategray2",
treatment=="ZH"~"lightseagreen",
treatment=="LL"~"gold",
treatment=="LH"~"lightcoral",
treatment=="RL"~"orange",
treatment=="RH"~"brown3",
treatment=="ZF"~"mediumpurple3",
TRUE~"grey50"
)) %>%
ggplot() +
geom_point(aes(x=MDS1, y=MDS2, color=replicate, label = filename), size=4) +
# scale_color_identity(guide = "legend", ) +
theme_bw()
ggplotly()
glycine_betaine <- peak_data_area_norm %>%
mutate(mz, str_extract(mz, "118.086")) %>%
na.omit() %>%
select(-c(filename, replicate)) %>%
group_by(treatment, date) %>%
mutate(area_avg = mean(area_per_L)) %>%
filter(rt <= "500") %>%
filter(rt >= "400") %>%
select(c(treatment, date, area_avg)) %>%
distinct(area_avg)
View(glycine_betaine)
glycine_betaine <- peak_data_area_norm %>%
mutate(mz, str_extract(mz, "118.086"))
View(glycine_betaine)
glycine_betaine <- peak_data_area_norm %>%
mutate(mz, str_extract(mz, "118.086")) %>%
na.omit()
View(glycine_betaine)
View(peri_mat)
peri_mat <- peak_data_nmds %>%
group_by(compound) %>%
mutate(norm_area=rank(area_per_L)) %>%
pivot_wider(id_cols = filename, id_expand = TRUE, names_from = "compound", values_from = "norm_area") %>%
column_to_rownames("filename") %>%
data.matrix() %>%
select("FT0604")
peri_mat <- peak_data_nmds %>%
group_by(compound) %>%
mutate(norm_area=rank(area_per_L)) %>%
pivot_wider(id_cols = filename, id_expand = TRUE, names_from = "compound", values_from = "norm_area") %>%
column_to_rownames("filename") %>%
select("FT0604") %>%
data.matrix()
mdsout <- peri_mat %>%
metaMDS(k = 2, autotransform = FALSE)
mds_data <- metadataframe %>%
filter(compound == "FT0604")
mds_data <- metadataframe %>%
filter(compound = "FT0604")
View(metadataframe)
mds_data <- metadataframe
mdsout$points %>%
as.data.frame() %>%
rownames_to_column("filename") %>%
left_join(mds_data) %>%
mutate(col_id=case_when(
treatment=="C"~"plum2",
treatment=="ZL"~"darkslategray2",
treatment=="ZH"~"lightseagreen",
treatment=="LL"~"gold",
treatment=="LH"~"lightcoral",
treatment=="RL"~"orange",
treatment=="RH"~"brown3",
treatment=="ZF"~"mediumpurple3",
TRUE~"grey50"
)) %>%
ggplot() +
geom_point(aes(x=MDS1, y=MDS2, color=replicate, label = filename), size=4) +
# scale_color_identity(guide = "legend", ) +
theme_bw()
mdsout$points %>%
as.data.frame() %>%
rownames_to_column("filename") %>%
left_join(mds_data) %>%
mutate(col_id=case_when(
treatment=="C"~"plum2",
treatment=="ZL"~"darkslategray2",
treatment=="ZH"~"lightseagreen",
treatment=="LL"~"gold",
treatment=="LH"~"lightcoral",
treatment=="RL"~"orange",
treatment=="RH"~"brown3",
treatment=="ZF"~"mediumpurple3",
TRUE~"grey50"
)) %>%
ggplot() +
geom_point(aes(x=MDS1, y=MDS2, color=treatment, label = filename), size=4) +
scale_color_identity(guide = "legend", ) +
theme_bw()
mdsout$points %>%
as.data.frame() %>%
rownames_to_column("filename") %>%
left_join(mds_data) %>%
mutate(col_id=case_when(
treatment=="C"~"plum2",
treatment=="ZL"~"darkslategray2",
treatment=="ZH"~"lightseagreen",
treatment=="LL"~"gold",
treatment=="LH"~"lightcoral",
treatment=="RL"~"orange",
treatment=="RH"~"brown3",
treatment=="ZF"~"mediumpurple3",
TRUE~"grey50"
)) %>%
ggplot() +
geom_point(aes(x=MDS1, y=MDS2, color=treatment, label = filename), size=4) +
scale_color_identity(guide = "legend", ) +
theme_bw()
mdsout$points %>%
as.data.frame() %>%
rownames_to_column("filename") %>%
left_join(mds_data) %>%
mutate(col_id=case_when(
treatment=="C"~"plum2",
treatment=="ZL"~"darkslategray2",
treatment=="ZH"~"lightseagreen",
treatment=="LL"~"gold",
treatment=="LH"~"lightcoral",
treatment=="RL"~"orange",
treatment=="RH"~"brown3",
treatment=="ZF"~"mediumpurple3",
TRUE~"grey50"
)) %>%
ggplot() +
geom_point(aes(x=MDS1, y=MDS2, color=col_id, label = filename), size=4) +
scale_color_identity(guide = "legend", ) +
theme_bw()
ggplot(glycine_betaine) +
geom_boxplot(aes(x = timepoint, y = area_per_L, fill = treatment)) +
# geom_line(aes(x = date, y = area_avg, color = treatment)) +
scale_fill_manual(values = c("plum2", "lightcoral", "gold", "brown3", "orange", "grey50",
"mediumpurple", "lightseagreen", "darkslategray2")) +
theme_bw() +
xlab("Sample Date") +
ylab("Peak Area per Liter Filtered") +
ggtitle("Glycine Betaine Peak Area Timeseries")
ggplot(glycine_betaine) +
geom_boxplot(aes(x = timepoint, y = area_per_L, fill = treatment)) +
# geom_line(aes(x = date, y = area_avg, color = treatment)) +
scale_fill_manual(values = c("plum2", "lightcoral", "gold", "brown3", "orange", "grey50",
"mediumpurple", "lightseagreen", "darkslategray2")) +
theme_bw() +
xlab("Sample Date") +
ylab("Peak Area per Liter Filtered") +
ggtitle("Glycine Betaine Peak Area Timeseries") +
scale_y_log10()
glycine_betaine %>%
mutate(norm_area = rank(area_per_L)) %>%
ggplot() +
geom_boxplot(aes(x = timepoint, y = norm_area, fill = treatment)) +
# geom_line(aes(x = date, y = area_avg, color = treatment)) +
scale_fill_manual(values = c("plum2", "lightcoral", "gold", "brown3", "orange", "grey50",
"mediumpurple", "lightseagreen", "darkslategray2")) +
theme_bw() +
xlab("Sample Date") +
ylab("Peak Area per Liter Filtered") +
ggtitle("Glycine Betaine Peak Area Timeseries") +
scale_y_log10()
glycine_betaine %>%
mutate(norm_area = rank(area_per_L)) %>%
ggplot() +
geom_boxplot(aes(x = timepoint, y = norm_area, fill = treatment)) +
# geom_line(aes(x = date, y = area_avg, color = treatment)) +
scale_fill_manual(values = c("plum2", "lightcoral", "gold", "brown3", "orange", "grey50",
"mediumpurple", "lightseagreen", "darkslategray2")) +
theme_bw() +
xlab("Sample Date") +
ylab("Peak Area per Liter Filtered") +
ggtitle("Glycine Betaine Peak Area Timeseries")
glycine_betaine <- peak_data_area_norm %>%
mutate(mz, str_extract(mz, "118.086")) %>%
na.omit() %>%
select(-c(filename, replicate)) %>%
group_by(treatment, date) %>%
mutate(area_avg = mean(area_per_L)) %>%
filter(rt <= "500") %>%
filter(rt >= "400") %>%
select(c(treatment, date, area_avg)) %>%
distinct(area_avg)
glycine_betaine %>%
ungroup() %>%
mutate(norm_area = rank(area_per_L)) %>%
ggplot() +
geom_boxplot(aes(x = timepoint, y = norm_area, fill = treatment)) +
# geom_line(aes(x = date, y = area_avg, color = treatment)) +
scale_fill_manual(values = c("plum2", "lightcoral", "gold", "brown3", "orange", "grey50",
"mediumpurple", "lightseagreen", "darkslategray2")) +
theme_bw() +
xlab("Sample Date") +
ylab("Peak Area per Liter Filtered") +
ggtitle("Glycine Betaine Peak Area Timeseries")
glycine_betaine <- peak_data_area_norm %>%
mutate(mz, str_extract(mz, "118.086")) %>%
na.omit() %>%
select(-c(filename, replicate)) %>%
group_by(treatment, date) %>%
mutate(area_avg = mean(area_per_L)) %>%
filter(rt <= "500") %>%
filter(rt >= "400")
glycine_betaine %>%
ungroup() %>%
mutate(norm_area = rank(area_per_L)) %>%
ggplot() +
geom_boxplot(aes(x = timepoint, y = norm_area, fill = treatment)) +
# geom_line(aes(x = date, y = area_avg, color = treatment)) +
scale_fill_manual(values = c("plum2", "lightcoral", "gold", "brown3", "orange", "grey50",
"mediumpurple", "lightseagreen", "darkslategray2")) +
theme_bw() +
xlab("Sample Date") +
ylab("Peak Area per Liter Filtered") +
ggtitle("Glycine Betaine Peak Area Timeseries")
library(tidyverse)
library(ggplot2)
peak_list <- read_csv('csvs/targeted_peak_list.csv') %>%
mutate(Protein = str_replace(Protein, "HILIC_Pos_Standards", "HILIC")) %>%
rename(Column = Protein) %>%
rename(Precursor.Ion.Name = Peptide) %>%
mutate(Replicate.Name =str_extract(Replicate, "Std|Poo|Blk|C|ZF|ZL|ZH|RL|RH|LL|LH|Tote")) %>%
mutate(timepoint=str_extract(Replicate, "27June|30June|14July|21July|27July")) %>%
rename(Precursor.Mz = `Precursor Mz`) %>%
rename(Precursor.Charge = `Precursor Charge`) %>%
rename(Product.Mz = `Product Mz`) %>%
rename(Product.Charge = `Product Charge`) %>%
rename(Frag.Ion = `Fragment Ion`) %>%
rename(Retention.Time = `Retention Time`) %>%
rename(Peak.Rank = `Peak Rank`) %>%
select(-c(Precursor.Charge, Frag.Ion, Peak.Rank)) %>%
mutate(Background = as.numeric(as.factor(Background))) %>%
mutate(Area = as.numeric(as.factor(Area))) %>%
mutate(Retention.Time = as.numeric(as.factor(Retention.Time)))
Ingalls_Standards <- read.csv(
"https://raw.githubusercontent.com/IngallsLabUW/Ingalls_Standards/master/Ingalls_Lab_Standards.csv",
stringsAsFactors = FALSE, header = TRUE) %>%
# filter(Column == Column.Type) %>%
rename(Metabolite.Name = Compound_Name) %>%
select(Metabolite.Name, Compound_Type, Concentration_uM, HILIC_Mix, Empirical_Formula) %>% #QE.RF.ratio
filter(!is.na(Concentration_uM)) %>%
filter(Compound_Type == "Internal Standard") %>%
mutate(Concentration_nM = Concentration_uM * 1000) %>%
select(-c(Concentration_uM)) %>%
rename(Internal_Standards = Metabolite.Name) %>%
mutate(Matched_Compounds = Internal_Standards) %>%
mutate(Matched_Compounds = str_remove(Matched_Compounds, ",.*")) %>%
select(-c(HILIC_Mix, Compound_Type, Empirical_Formula))
# QE + TQS QC parameters
area.min   <- 1000 # peak area minimum - calculated from peak intensity of chromatogram
RT.flex    <- 0.4 # retention time flexibility - accounts variance across matrices and time on machine
blk.thresh <- 0.3 # blank sample threshold to calculate difference for samples
SN.min     <- 4 # signal to noise ratio minimum
height.min <- 1000 # noise threshold minimum
height.max <- 1.0e10 # not as significant for Orbitrap, important for TQS
peak_list_qc <- peak_list %>%
filter(Area >= area.min) %>%
mutate(SNratio = Area/Background) %>%
filter(SNratio >= SN.min)
# new column of smp:blk, filter >= 1?
# for loop that calculates that the sample peak areas are greater than the blanks
if ("Column" %in% colnames(peak_list_qc)) {
Internal_Standards <- read.csv(
"https://raw.githubusercontent.com/IngallsLabUW/Ingalls_Standards/master/Ingalls_Lab_Standards.csv") %>%
filter(Column == "HILIC") %>%
filter(Compound_Name %in% peak_list_qc$Precursor.Ion.Name) %>% # tidy this once it's complete
rename(Precursor.Ion.Name = Compound_Name) %>%
select(Precursor.Ion.Name) %>%
unique()
peak_list.nostds <- peak_list_qc %>%
filter(!str_detect(Replicate.Name, "Std"))
peak_list.stds <- peak_list_qc %>%
filter(str_detect(Replicate.Name, "Std")) %>%
left_join(Internal_Standards)
# filter(str_detect(Replicate.Name) | str_detect(Replicate.Name, regex("H2OinMatrix", ignore_case = TRUE))) %>%
# select(-HILICMix)
peak_list_qc <- peak_list.stds %>%
rbind(peak_list.nostds) %>%
arrange(Precursor.Ion.Name)
}
# Need to find minimum and maximum retention time for each sample
RT.table <- peak_list_qc %>%
filter(str_detect(Replicate.Name, regex("Std", ignore_case = TRUE))) %>%
group_by(Precursor.Ion.Name) %>%
mutate(RT.min = min(Retention.Time, na.rm = TRUE)) %>%
mutate(RT.max = max(Retention.Time, na.rm = TRUE)) %>%
mutate(RT.Reference = mean(Retention.Time, na.rm = TRUE)) %>%
select(Precursor.Ion.Name, RT.min, RT.max) %>%
unique()
area.table <- peak_list_qc %>%
select(Replicate.Name, Precursor.Ion.Name, Area) %>%
filter(str_detect(Replicate.Name, regex("Smp|Poo", ignore_case = TRUE)))
SN.table <- peak_list_qc %>%
filter(str_detect(Replicate.Name, regex("Smp|Poo", ignore_case = TRUE))) %>%
select(Replicate.Name, Precursor.Ion.Name, Area, Background) %>%
mutate(Signal.to.Noise = (Area / Background))
blank.table <- peak_list_qc %>%
filter(str_detect(Replicate.Name, regex("Blk", ignore_case = TRUE))) %>%
select(Precursor.Ion.Name, Area) %>%
group_by(Precursor.Ion.Name) %>%
filter(Area == max(Area)) %>%
rename(Blank.max = Area) %>%
unique()
peak_list_all_flags <- peak_list_qc %>%
left_join(RT.table) %>%
mutate(RT.Flag = ifelse((Retention.Time >= (RT.max + RT.flex) | Retention.Time <= (RT.min - RT.flex)),
"RT.Flag", NA)) %>%
left_join(blank.table) %>%
group_by(Precursor.Ion.Name) %>%
mutate(Blank.Reference = Area / Blank.max) %>%
mutate(IS_present = ifelse(str_detect(Replicate.Name, ","), "Internal Std", "Non IS")) %>%
mutate(blank.Flag = ifelse(((IS_present != "Internal Std") & ((Area / Blank.max) < blk.thresh)),
"blank.Flag",
ifelse(((IS_present == "Internal Std") & ((Area / Blank.max) < blk.thresh)),
"IS.blank.Flag", NA))) %>%
mutate(area.min.Flag = ifelse((Area < area.min), "area.min.Flag", NA)) %>%
mutate(Area.with.QC   = ifelse(is.na(area.min.Flag), Area, NA)) %>%
select(Replicate.Name:Area, Area.with.QC, everything()) %>%
left_join(SN.table) %>%
mutate(SN.Flag = ifelse((Signal.to.Noise < SN.min), "SN.Flag", NA))
Internal.Standards <- read.csv("https://raw.githubusercontent.com/IngallsLabUW/Ingalls_Standards/master/Ingalls_Lab_Standards.csv",
stringsAsFactors = FALSE, header = TRUE) %>%
filter(Compound_Type == "Internal Standard")
QCd.data <- peak_list_all_flags %>%
filter(!str_detect(Replicate.Name, "Blk|Std"))
# SampKey <- QCd.data %>%
#   select(Replicate.Name) %>%
#   mutate(Area.with.QC = ifelse(str_detect(Replicate.Name, "Half"), 0.5, 1.0)) %>%
#   mutate(Mass.Feature = "Inj_vol")
SampKey <- QCd.data %>%
select(Replicate) %>%
mutate(Area.with.QC = ifelse(str_detect(Replicate, "Half"), 0.5, 1.0)) %>%
mutate(Mass.Feature = "Inj_vol") %>%
group_by(Replicate)
Int.Stds.data <- QCd.data %>%
filter(Precursor.Ion.Name %in% Internal.Standards$Compound_Name)%>%
select(Replicate, Precursor.Ion.Name, Area.with.QC) %>%
rename(Mass.Feature = Precursor.Ion.Name)
# Int.Stds.data <- QCd.data %>%
#   filter(Precursor.Ion.Name %in% Internal.Standards$Compound_Name)%>%
#   select(Replicate, Precursor.Ion.Name, Area.with.QC) %>%
#   rename(Mass.Feature = Precursor.Ion.Name) %>%
#   group_by(Replicate)
Data.NoIS <- QCd.data %>%
filter(!Precursor.Ion.Name %in% Internal.Standards$Compound_Name)
Int.Stds.data <- rbind(Int.Stds.data, SampKey) %>%
separate(Replicate, into = c("a", "RunType", "c", "d"), sep = "_", remove = FALSE)
# Int.Stds.full.data <- left_join(Int.Stds.data, SampKey, by = "Replicate") %>%
#   group_by(Replicate, Mass.Feature.x, Area.with.QC.x) %>%
#   distinct(Precursor.Ion.Name)
glycine_betaine %>%
ungroup() %>%
# mutate(norm_area = rank(area_per_L)) %>%
ggplot() +
geom_boxplot(aes(x = timepoint, y = area_per_L, fill = treatment)) +
# geom_line(aes(x = date, y = area_avg, color = treatment)) +
scale_fill_manual(values = c("plum2", "lightcoral", "gold", "brown3", "orange", "grey50",
"mediumpurple", "lightseagreen", "darkslategray2")) +
theme_bw() +
xlab("Sample Date") +
ylab("Peak Area per Liter Filtered") +
ggtitle("Glycine Betaine Peak Area Timeseries")
SampKey <- QCd.data %>%
select(Replicate.Name) %>%
mutate(Area.with.QC = ifelse(str_detect(Replicate.Name, "Half"), 0.5, 1.0)) %>%
mutate(Mass.Feature = "Inj_vol")
Int.Stds.data <- QCd.data %>%
filter(Precursor.Ion.Name %in% Internal.Standards$Compound_Name)%>%
select(Replicate.Name, Precursor.Ion.Name, Area.with.QC) %>%
rename(Mass.Feature = Precursor.Ion.Name)
library(xcms)
library(tidyverse)
library(RaMS)
library(vegan)
library(RColorBrewer)
library(readxl)
library(plotly)

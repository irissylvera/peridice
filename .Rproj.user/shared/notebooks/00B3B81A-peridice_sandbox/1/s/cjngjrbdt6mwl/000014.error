{"frames":[{"func":"source(\"scripts/dataframe_setup.R\")","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"withVisible(eval(ei, envir))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"eval(ei, envir)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"eval(ei, envir)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"read_xlsx(\"PERIDICE_sample_notes.xlsx\") %>% mutate(treatment = str_extract(treatment, \n    \"Std|Poo|Blk|C|ZF|ZL|ZH|RL|RH|LL|LH|Tote1|Tote2|Tote3|Tote3|Tote4\")) %>% \n    select(-c(init, notes, sample_collection_date)) %>% rename(timepoint = date) %>% \n    mutate(replicate = as.character(replicate)) %>% group_by(timepoint,  ...","file":"scripts/dataframe_setup.R","line_number":43,"end_line_number":48,"character_number":1,"end_character_number":43},{"func":"group_by(., timepoint, treatment, replicate)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"mutate(., replicate = as.character(replicate))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"rename(., timepoint = date)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"rename(., timepoint = date)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"stop(\"arguments in '...' must be character and not NA\")","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"Error in rename(., timepoint = date) : \n  arguments in '...' must be character and not NA\n"}